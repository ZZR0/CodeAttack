  0%|          | 0/11998 [00:00<?, ?it/s]  0%|          | 1/11998 [00:03<12:00:51,  3.61s/it][Succeeded / Failed / Skipped / Total] 0 / 1 / 0 / 1:   0%|          | 1/11998 [00:03<12:00:58,  3.61s/it][Succeeded / Failed / Skipped / Total] 0 / 1 / 0 / 1:   0%|          | 2/11998 [00:04<7:34:46,  2.27s/it] [Succeeded / Failed / Skipped / Total] 0 / 2 / 0 / 2:   0%|          | 2/11998 [00:04<7:34:49,  2.27s/it][Succeeded / Failed / Skipped / Total] 0 / 2 / 0 / 2:   0%|          | 3/11998 [00:05<5:59:52,  1.80s/it][Succeeded / Failed / Skipped / Total] 0 / 3 / 0 / 3:   0%|          | 3/11998 [00:05<5:59:55,  1.80s/it][Succeeded / Failed / Skipped / Total] 0 / 3 / 0 / 3:   0%|          | 4/11998 [00:06<5:15:07,  1.58s/it][Succeeded / Failed / Skipped / Total] 0 / 4 / 0 / 4:   0%|          | 4/11998 [00:06<5:15:09,  1.58s/it][Succeeded / Failed / Skipped / Total] 0 / 4 / 0 / 4:   0%|          | 5/11998 [00:09<6:34:44,  1.97s/it][Succeeded / Failed / Skipped / Total] 0 / 5 / 0 / 5:   0%|          | 5/11998 [00:09<6:34:45,  1.97s/it][Succeeded / Failed / Skipped / Total] 0 / 5 / 0 / 5:   0%|          | 6/11998 [00:10<5:58:12,  1.79s/it]Attack(
  (search_method): GreedyWordSwapWIR(
    (wir_method):  delete
  )
  (goal_function):  CloneGoalFunction
  (transformation):  WordSwapEmbedding(
    (max_candidates):  50
    (embedding):  WordEmbedding
  )
  (constraints): 
    (0): MaxWordsPerturbed(
        (max_num_words):  5
        (compare_against_original):  True
      )
    (1): KeyWord(
        (compare_against_original):  True
      )
    (2): RepeatModification
  (is_black_box):  True
) 

--------------------------------------------- Result 1 ---------------------------------------------
[[0 (-10828%)]] --> [[[FAILED]]]

[[[[Code]]]]: int f(int m, int n){ if(m==0||n==1){ return 1; } if(m<n){ return f(m ,m); } else{ return f(m,n-1) + f(m-n , n); } } int main() { int t,a,b; scanf("%d",&t); for(int i=0;i<t;i++){ scanf("%d %d",&a,&b); printf("%d\n",f(a,b)); } return 0; }
[[[[Adv]]]]: int f(int [[m]], int [[n]]){ if([[m]]==0||[[n]]==1){ return 1; } if([[m]]<[[n]]){ return f([[m]] ,[[m]]); } else{ return f([[m]],[[n]]-1) + f([[m]]-[[n]] , [[n]]); } } int main() { int [[t]],a,b; scanf("%d",&[[t]]); for(int [[i]]=0;[[i]]<[[t]];[[i]]++){ scanf("%d %d",&a,&b); printf("%d\n",f(a,b)); } return 0; }

[[[[Code]]]]: int f(int m, int n){ if(m==0||n==1){ return 1; } if(m<n){ return f(m ,m); } else{ return f(m,n-1) + f(m-n , n); } } int main() { int t,a,b; scanf("%d",&t); for(int i=0;i<t;i++){ scanf("%d %d",&a,&b); printf("%d\n",f(a,b)); } return 0; }
[[[[Adv]]]]: int f(int [[kilometres]], int [[phosphorous]]){ if([[kilometres]]==0||[[phosphorous]]==1){ return 1; } if([[kilometres]]<[[phosphorous]]){ return f([[kilometres]] ,[[kilometres]]); } else{ return f([[kilometres]],[[phosphorous]]-1) + f([[kilometres]]-[[phosphorous]] , [[phosphorous]]); } } int main() { int [[b]],a,b; scanf("%d",&[[b]]); for(int [[siento]]=0;[[siento]]<[[b]];[[siento]]++){ scanf("%d %d",&a,&b); printf("%d\n",f(a,b)); } return 0; }


--------------------------------------------- Result 2 ---------------------------------------------
[[0 (-9849%)]] --> [[[FAILED]]]

[[[[Code]]]]: int main() { int i,j,n,m,t[100],k[20]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&m); if(m==0) { t[i]=60; } else { for(j=1;j<=m;j++) { scanf("%d",&k[j]); } for(j=1;j<=m;j++) { if(k[j]+j*3>=63) { t[i]=63-j*3; break; } else if(k[j]+j*3>=60) { t[i]=k[j]; break; } else { t[i]=60-3*m; } } } } for(i=0;i<n;i++) { if(i>0) printf("\n"); printf("%d",t[i]); } return 0; }
[[[[Adv]]]]: int main() { int [[i]],j,n,m,t[100],k[20]; scanf("%d",&n); for([[i]]=0;[[i]]<n;[[i]]++) { scanf("%d",&m); if(m==0) { t[[[i]]]=60; } else { for(j=1;j<=m;j++) { scanf("%d",&k[j]); } for(j=1;j<=m;j++) { if(k[j]+j*3>=63) { t[[[i]]]=63-j*3; break; } else if(k[j]+j*3>=60) { t[[[i]]]=k[j]; break; } else { t[[[i]]]=60-3*m; } } } } for([[i]]=0;[[i]]<n;[[i]]++) { if([[i]]>0) printf("\n"); printf("%d",t[[[i]]]); } return 0; }

[[[[Code]]]]: int main() { int i,j,n,m,t[100],k[20]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&m); if(m==0) { t[i]=60; } else { for(j=1;j<=m;j++) { scanf("%d",&k[j]); } for(j=1;j<=m;j++) { if(k[j]+j*3>=63) { t[i]=63-j*3; break; } else if(k[j]+j*3>=60) { t[i]=k[j]; break; } else { t[i]=60-3*m; } } } } for(i=0;i<n;i++) { if(i>0) printf("\n"); printf("%d",t[i]); } return 0; }
[[[[Adv]]]]: int main() { int [[suis]],j,n,m,t[100],k[20]; scanf("%d",&n); for([[suis]]=0;[[suis]]<n;[[suis]]++) { scanf("%d",&m); if(m==0) { t[[[suis]]]=60; } else { for(j=1;j<=m;j++) { scanf("%d",&k[j]); } for(j=1;j<=m;j++) { if(k[j]+j*3>=63) { t[[[suis]]]=63-j*3; break; } else if(k[j]+j*3>=60) { t[[[suis]]]=k[j]; break; } else { t[[[suis]]]=60-3*m; } } } } for([[suis]]=0;[[suis]]<n;[[suis]]++) { if([[suis]]>0) printf("\n"); printf("%d",t[[[suis]]]); } return 0; }


--------------------------------------------- Result 3 ---------------------------------------------
[[0 (-9970%)]] --> [[[FAILED]]]

[[[[Code]]]]: void main() {int z,i; i=0; scanf("%d",&z); if(z%3==0) {printf("3");i=i+1;} if(z%5==0) {if(i==1){printf(" ");}printf("5");i=i+1;} if(z%7==0) {if(i!=0){printf(" ");}printf("7");i=i+1;} if(i==0) {printf("n");} }
[[[[Adv]]]]: void main() {int [[z]],i; i=0; scanf("%d",&[[z]]); if([[z]]%3==0) {printf("3");i=i+1;} if([[z]]%5==0) {if(i==1){printf(" ");}printf("5");i=i+1;} if([[z]]%7==0) {if(i!=0){printf(" ");}printf("7");i=i+1;} if(i==0) {printf("n");} }

[[[[Code]]]]: void main() {int z,i; i=0; scanf("%d",&z); if(z%3==0) {printf("3");i=i+1;} if(z%5==0) {if(i==1){printf(" ");}printf("5");i=i+1;} if(z%7==0) {if(i!=0){printf(" ");}printf("7");i=i+1;} if(i==0) {printf("n");} }
[[[[Adv]]]]: void main() {int [[per]],i; i=0; scanf("%d",&[[per]]); if([[per]]%3==0) {printf("3");i=i+1;} if([[per]]%5==0) {if(i==1){printf(" ");}printf("5");i=i+1;} if([[per]]%7==0) {if(i!=0){printf(" ");}printf("7");i=i+1;} if(i==0) {printf("n");} }


--------------------------------------------- Result 4 ---------------------------------------------
[[0 (-9672%)]] --> [[[FAILED]]]

[[[[Code]]]]: int main() { int a[100][6],i,t,sum=0,time; for(i=0;i<100;i++) { for(t=0;t<6;t++) { scanf("%d",&a[i][t]); } if(a[i][0]==0&&a[i][1]==0&&a[i][2]==0&&a[i][3]==0&&a[i][4]==0&&a[i][5]==0) break; sum++; } for(i=0;i<sum;i++) { time=(a[i][3]+12-a[i][0]-1)*3600+a[i][4]*60+a[i][5]+(3600-a[i][1]*60-a[i][2]); printf("%d\n",time); } return 0; }
[[[[Adv]]]]: int main() { int [[a]][100][6],i,t,sum=0,time; for(i=0;i<100;i++) { for(t=0;t<6;t++) { scanf("%d",&[[a]][i][t]); } if([[a]][i][0]==0&&[[a]][i][1]==0&&[[a]][i][2]==0&&[[a]][i][3]==0&&[[a]][i][4]==0&&[[a]][i][5]==0) break; sum++; } for(i=0;i<sum;i++) { time=([[a]][i][3]+12-[[a]][i][0]-1)*3600+[[a]][i][4]*60+[[a]][i][5]+(3600-[[a]][i][1]*60-[[a]][i][2]); printf("%d\n",time); } return 0; }

[[[[Code]]]]: int main() { int a[100][6],i,t,sum=0,time; for(i=0;i<100;i++) { for(t=0;t<6;t++) { scanf("%d",&a[i][t]); } if(a[i][0]==0&&a[i][1]==0&&a[i][2]==0&&a[i][3]==0&&a[i][4]==0&&a[i][5]==0) break; sum++; } for(i=0;i<sum;i++) { time=(a[i][3]+12-a[i][0]-1)*3600+a[i][4]*60+a[i][5]+(3600-a[i][1]*60-a[i][2]); printf("%d\n",time); } return 0; }
[[[[Adv]]]]: int main() { int [[uno]][100][6],i,t,sum=0,time; for(i=0;i<100;i++) { for(t=0;t<6;t++) { scanf("%d",&[[uno]][i][t]); } if([[uno]][i][0]==0&&[[uno]][i][1]==0&&[[uno]][i][2]==0&&[[uno]][i][3]==0&&[[uno]][i][4]==0&&[[uno]][i][5]==0) break; sum++; } for(i=0;i<sum;i++) { time=([[uno]][i][3]+12-[[uno]][i][0]-1)*3600+[[uno]][i][4]*60+[[uno]][i][5]+(3600-[[uno]][i][1]*60-[[uno]][i][2]); printf("%d\n",time); } return 0; }


--------------------------------------------- Result 5 ---------------------------------------------
[[0 (-9893%)]] --> [[[FAILED]]]

[[[[Code]]]]: int sz(char a) { int m=0; if(('0'<=a)&&(a<='9')) m=1; return m; } int main() { int i,n,k=0; char *p,a[30]; gets(a); p=a; n=strlen(a); for(i=0;i<n;i++,p++) { if(sz(*p)==1) { printf("%c",*p); k=1; } else { if(k==1) { printf("\n"); k=0; } } } return 0; }
[[[[Adv]]]]: int sz(char [[a]]) { int [[m]]=0; if(('0'<=[[a]])&&([[a]]<='9')) [[m]]=1; return [[m]]; } int main() { int [[i]],n,k=0; char *[[p]],[[a]][30]; gets([[a]]); [[p]]=[[a]]; n=strlen([[a]]); for([[i]]=0;[[i]]<n;[[i]]++,[[p]]++) { if(sz(*[[p]])==1) { printf("%c",*[[p]]); k=1; } else { if(k==1) { printf("\n"); k=0; } } } return 0; }

[[[[Code]]]]: int sz(char a) { int m=0; if(('0'<=a)&&(a<='9')) m=1; return m; } int main() { int i,n,k=0; char *p,a[30]; gets(a); p=a; n=strlen(a); for(i=0;i<n;i++,p++) { if(sz(*p)==1) { printf("%c",*p); k=1; } else { if(k==1) { printf("\n"); k=0; } } } return 0; }
[[[[Adv]]]]: int sz(char [[latter]]) { int [[zillion]]=0; if(('0'<=[[latter]])&&([[latter]]<='9')) [[zillion]]=1; return [[zillion]]; } int main() { int [[huh]],n,k=0; char *[[percentage]],[[latter]][30]; gets([[latter]]); [[percentage]]=[[latter]]; n=strlen([[latter]]); for([[huh]]=0;[[huh]]<n;[[huh]]++,[[percentage]]++) { if(sz(*[[percentage]])==1) { printf("%c",*[[percentage]]); k=1; } else { if(k==1) { printf("\n"); k=0; } } } return 0; }


--------------------------------------------- Result 6 ---------------------------------------------
[Succeeded / Failed / Skipped / Total] 0 / 6 / 0 / 6:   0%|          | 6/11998 [00:10<5:58:14,  1.79s/it][Succeeded / Failed / Skipped / Total] 0 / 6 / 0 / 6:   0%|          | 7/11998 [00:12<6:03:21,  1.82s/it][Succeeded / Failed / Skipped / Total] 0 / 7 / 0 / 7:   0%|          | 7/11998 [00:12<6:03:22,  1.82s/it][Succeeded / Failed / Skipped / Total] 0 / 7 / 0 / 7:   0%|          | 8/11998 [00:16<6:50:07,  2.05s/it][Succeeded / Failed / Skipped / Total] 0 / 8 / 0 / 8:   0%|          | 8/11998 [00:16<6:50:08,  2.05s/it][Succeeded / Failed / Skipped / Total] 0 / 8 / 0 / 8:   0%|          | 9/11998 [00:19<7:10:45,  2.16s/it][[0 (-8778%)]] --> [[[FAILED]]]

[[[[Code]]]]: int main() { int a[10],n,m,i,j,k; cin >>n; a[1]=n/100; n=n%100; a[2]=n/50; n=n%50; a[3]=n/20; n=n%20; a[4]=n/10; n=n%10; a[5]=n/5; n=n%5; a[6]=n; for (i=1;i<=6;i++) cout <<a[i]<<endl; return 0; }
[[[[Adv]]]]: int main() { int [[a]][10],n,m,i,j,k; cin >>n; [[a]][1]=n/100; n=n%100; [[a]][2]=n/50; n=n%50; [[a]][3]=n/20; n=n%20; [[a]][4]=n/10; n=n%10; [[a]][5]=n/5; n=n%5; [[a]][6]=n; for (i=1;i<=6;i++) cout <<[[a]][i]<<endl; return 0; }

[[[[Code]]]]: int main() { int a[10],n,m,i,j,k; cin >>n; a[1]=n/100; n=n%100; a[2]=n/50; n=n%50; a[3]=n/20; n=n%20; a[4]=n/10; n=n%10; a[5]=n/5; n=n%5; a[6]=n; for (i=1;i<=6;i++) cout <<a[i]<<endl; return 0; }
[[[[Adv]]]]: int main() { int [[è]][10],n,m,i,j,k; cin >>n; [[è]][1]=n/100; n=n%100; [[è]][2]=n/50; n=n%50; [[è]][3]=n/20; n=n%20; [[è]][4]=n/10; n=n%10; [[è]][5]=n/5; n=n%5; [[è]][6]=n; for (i=1;i<=6;i++) cout <<[[è]][i]<<endl; return 0; }


--------------------------------------------- Result 7 ---------------------------------------------
[[0 (-11219%)]] --> [[[FAILED]]]

[[[[Code]]]]: int main() { int n,a[2][10],i,e,sum1=0; double b[10],sum2=0; scanf("%d",&n); for(i=0;i<2;i++) { for(e=0;e<n;e++) { scanf("%d",&a[i][e]); } } for(i=0;i<n;i++) { if(a[1][i]>=90&&a[1][i]<=100) b[i]=4.0; if(a[1][i]>=85&&a[1][i]<=89) b[i]=3.7; if(a[1][i]>=82&&a[1][i]<=84) b[i]=3.3; if(a[1][i]>=78&&a[1][i]<=81) b[i]=3.0; if(a[1][i]>=75&&a[1][i]<=77) b[i]=2.7; if(a[1][i]>=72&&a[1][i]<=74) b[i]=2.3; if(a[1][i]>=68&&a[1][i]<=71) b[i]=2.0; if(a[1][i]>=64&&a[1][i]<=67) b[i]=1.5; if(a[1][i]>=60&&a[1][i]<=63) b[i]=1.0; if(a[1][i]<60) b[i]=0; } for(i=0;i<n;i++) { sum1+=a[0][i]; sum2+=b[i]*a[0][i]; } printf("%.2lf",sum2/sum1); return 0; }
[[[[Adv]]]]: int main() { int [[n]],a[2][10],i,e,sum1=0; double [[b]][10],sum2=0; scanf("%d",&[[n]]); for(i=0;i<2;i++) { for(e=0;e<[[n]];e++) { scanf("%d",&a[i][e]); } } for(i=0;i<[[n]];i++) { if(a[1][i]>=90&&a[1][i]<=100) [[b]][i]=4.0; if(a[1][i]>=85&&a[1][i]<=89) [[b]][i]=3.7; if(a[1][i]>=82&&a[1][i]<=84) [[b]][i]=3.3; if(a[1][i]>=78&&a[1][i]<=81) [[b]][i]=3.0; if(a[1][i]>=75&&a[1][i]<=77) [[b]][i]=2.7; if(a[1][i]>=72&&a[1][i]<=74) [[b]][i]=2.3; if(a[1][i]>=68&&a[1][i]<=71) [[b]][i]=2.0; if(a[1][i]>=64&&a[1][i]<=67) [[b]][i]=1.5; if(a[1][i]>=60&&a[1][i]<=63) [[b]][i]=1.0; if(a[1][i]<60) [[b]][i]=0; } for(i=0;i<[[n]];i++) { sum1+=a[0][i]; sum2+=[[b]][i]*a[0][i]; } printf("%.2lf",sum2/sum1); return 0; }

[[[[Code]]]]: int main() { int n,a[2][10],i,e,sum1=0; double b[10],sum2=0; scanf("%d",&n); for(i=0;i<2;i++) { for(e=0;e<n;e++) { scanf("%d",&a[i][e]); } } for(i=0;i<n;i++) { if(a[1][i]>=90&&a[1][i]<=100) b[i]=4.0; if(a[1][i]>=85&&a[1][i]<=89) b[i]=3.7; if(a[1][i]>=82&&a[1][i]<=84) b[i]=3.3; if(a[1][i]>=78&&a[1][i]<=81) b[i]=3.0; if(a[1][i]>=75&&a[1][i]<=77) b[i]=2.7; if(a[1][i]>=72&&a[1][i]<=74) b[i]=2.3; if(a[1][i]>=68&&a[1][i]<=71) b[i]=2.0; if(a[1][i]>=64&&a[1][i]<=67) b[i]=1.5; if(a[1][i]>=60&&a[1][i]<=63) b[i]=1.0; if(a[1][i]<60) b[i]=0; } for(i=0;i<n;i++) { sum1+=a[0][i]; sum2+=b[i]*a[0][i]; } printf("%.2lf",sum2/sum1); return 0; }
[[[[Adv]]]]: int main() { int [[latitude]],a[2][10],i,e,sum1=0; double [[volts]][10],sum2=0; scanf("%d",&[[latitude]]); for(i=0;i<2;i++) { for(e=0;e<[[latitude]];e++) { scanf("%d",&a[i][e]); } } for(i=0;i<[[latitude]];i++) { if(a[1][i]>=90&&a[1][i]<=100) [[volts]][i]=4.0; if(a[1][i]>=85&&a[1][i]<=89) [[volts]][i]=3.7; if(a[1][i]>=82&&a[1][i]<=84) [[volts]][i]=3.3; if(a[1][i]>=78&&a[1][i]<=81) [[volts]][i]=3.0; if(a[1][i]>=75&&a[1][i]<=77) [[volts]][i]=2.7; if(a[1][i]>=72&&a[1][i]<=74) [[volts]][i]=2.3; if(a[1][i]>=68&&a[1][i]<=71) [[volts]][i]=2.0; if(a[1][i]>=64&&a[1][i]<=67) [[volts]][i]=1.5; if(a[1][i]>=60&&a[1][i]<=63) [[volts]][i]=1.0; if(a[1][i]<60) [[volts]][i]=0; } for(i=0;i<[[latitude]];i++) { sum1+=a[0][i]; sum2+=[[volts]][i]*a[0][i]; } printf("%.2lf",sum2/sum1); return 0; }


--------------------------------------------- Result 8 ---------------------------------------------
[[0 (-11210%)]] --> [[[FAILED]]]

[[[[Code]]]]: int num(int m,int n,int sum) { if (m==1 || n==1) { sum++; return sum; } if (m<n) sum=num(m,n-1,sum); else if (m==n) sum=1+num(m,n-1,sum); if (m>n) { sum=num(m,n-1,sum); sum=num(m-n,n,sum); } return sum; } void main() { int i,t,m,n,sum=0; scanf ("%d",&t); for (i=0;i<t;i++) { sum=0; scanf ("%d %d",&m,&n); sum=num(m,n,sum); printf ("%d\n",sum); } }
[[[[Adv]]]]: int num(int [[m]],int [[n]],int [[sum]]) { if ([[m]]==1 || [[n]]==1) { [[sum]]++; return [[sum]]; } if ([[m]]<[[n]]) [[sum]]=num([[m]],[[n]]-1,[[sum]]); else if ([[m]]==[[n]]) [[sum]]=1+num([[m]],[[n]]-1,[[sum]]); if ([[m]]>[[n]]) { [[sum]]=num([[m]],[[n]]-1,[[sum]]); [[sum]]=num([[m]]-[[n]],[[n]],[[sum]]); } return [[sum]]; } void main() { int [[i]],t,[[m]],[[n]],[[sum]]=0; scanf ("%d",&t); for ([[i]]=0;[[i]]<t;[[i]]++) { [[sum]]=0; scanf ("%d %d",&[[m]],&[[n]]); [[sum]]=num([[m]],[[n]],[[sum]]); printf ("%d\n",[[sum]]); } }

[[[[Code]]]]: int num(int m,int n,int sum) { if (m==1 || n==1) { sum++; return sum; } if (m<n) sum=num(m,n-1,sum); else if (m==n) sum=1+num(m,n-1,sum); if (m>n) { sum=num(m,n-1,sum); sum=num(m-n,n,sum); } return sum; } void main() { int i,t,m,n,sum=0; scanf ("%d",&t); for (i=0;i<t;i++) { sum=0; scanf ("%d %d",&m,&n); sum=num(m,n,sum); printf ("%d\n",sum); } }
[[[[Adv]]]]: int num(int [[metres]],int [[latitude]],int [[chiffre]]) { if ([[metres]]==1 || [[latitude]]==1) { [[chiffre]]++; return [[chiffre]]; } if ([[metres]]<[[latitude]]) [[chiffre]]=num([[metres]],[[latitude]]-1,[[chiffre]]); else if ([[metres]]==[[latitude]]) [[chiffre]]=1+num([[metres]],[[latitude]]-1,[[chiffre]]); if ([[metres]]>[[latitude]]) { [[chiffre]]=num([[metres]],[[latitude]]-1,[[chiffre]]); [[chiffre]]=num([[metres]]-[[latitude]],[[latitude]],[[chiffre]]); } return [[chiffre]]; } void main() { int [[jag]],t,[[metres]],[[latitude]],[[chiffre]]=0; scanf ("%d",&t); for ([[jag]]=0;[[jag]]<t;[[jag]]++) { [[chiffre]]=0; scanf ("%d %d",&[[metres]],&[[latitude]]); [[chiffre]]=num([[metres]],[[latitude]],[[chiffre]]); printf ("%d\n",[[chiffre]]); } }


--------------------------------------------- Result 9 ---------------------------------------------
[Succeeded / Failed / Skipped / Total] 0 / 9 / 0 / 9:   0%|          | 9/11998 [00:19<7:10:46,  2.16s/it][Succeeded / Failed / Skipped / Total] 0 / 9 / 0 / 9:   0%|          | 10/11998 [00:21<7:03:53,  2.12s/it][Succeeded / Failed / Skipped / Total] 0 / 10 / 0 / 10:   0%|          | 10/11998 [00:21<7:03:54,  2.12s/it][Succeeded / Failed / Skipped / Total] 0 / 10 / 0 / 10:   0%|          | 11/11998 [00:25<7:34:22,  2.27s/it][Succeeded / Failed / Skipped / Total] 0 / 11 / 0 / 11:   0%|          | 11/11998 [00:25<7:34:22,  2.27s/it][Succeeded / Failed / Skipped / Total] 0 / 11 / 0 / 11:   0%|          | 12/11998 [00:26<7:29:11,  2.25s/it][[0 (-10172%)]] --> [[[FAILED]]]

[[[[Code]]]]: int main(int argc, char* argv[]) { int n1,n2,j=1,k=1,a[1000],b[1000],i=1,m=1,number,break1; scanf("%d%d",&n1,&n2); if (n1==1||n2==1) printf("1\n"); else { a[0]=n1; b[0]=n2; while(n1>1) { if (n1%2==0) { n1=n1/2; a[i]=n1; i++; } else {n1=(n1-1)/2;a[i]=n1;i++;} j++; } while(n2>1) { if (n2%2==0) { n2=n2/2; b[m]=n2; m++; } else {n2=(n2-1)/2;b[m]=n2;m++;} k++; } for (i=0;i<j;i++) { for (m=0;m<k;m++) { if (a[i]==b[m]) { number=a[i]; break1=0; break; } } if (break1==0) break; } printf("%d",number); } return 0; }
[[[[Adv]]]]: int main(int [[argc]], char* [[argv]][]) { int [[n1]],n2,j=1,k=1,a[1000],b[1000],i=1,m=1,number,break1; scanf("%d%d",&[[n1]],&n2); if ([[n1]]==1||n2==1) printf("1\n"); else { a[0]=[[n1]]; b[0]=n2; while([[n1]]>1) { if ([[n1]]%2==0) { [[n1]]=[[n1]]/2; a[i]=[[n1]]; i++; } else {[[n1]]=([[n1]]-1)/2;a[i]=[[n1]];i++;} j++; } while(n2>1) { if (n2%2==0) { n2=n2/2; b[m]=n2; m++; } else {n2=(n2-1)/2;b[m]=n2;m++;} k++; } for (i=0;i<j;i++) { for (m=0;m<k;m++) { if (a[i]==b[m]) { number=a[i]; break1=0; break; } } if (break1==0) break; } printf("%d",number); } return 0; }

[[[[Code]]]]: int main(int argc, char* argv[]) { int n1,n2,j=1,k=1,a[1000],b[1000],i=1,m=1,number,break1; scanf("%d%d",&n1,&n2); if (n1==1||n2==1) printf("1\n"); else { a[0]=n1; b[0]=n2; while(n1>1) { if (n1%2==0) { n1=n1/2; a[i]=n1; i++; } else {n1=(n1-1)/2;a[i]=n1;i++;} j++; } while(n2>1) { if (n2%2==0) { n2=n2/2; b[m]=n2; m++; } else {n2=(n2-1)/2;b[m]=n2;m++;} k++; } for (i=0;i<j;i++) { for (m=0;m<k;m++) { if (a[i]==b[m]) { number=a[i]; break1=0; break; } } if (break1==0) break; } printf("%d",number); } return 0; }
[[[[Adv]]]]: int main(int [[bees]], char* [[yes]][]) { int [[anthology]],n2,j=1,k=1,a[1000],b[1000],i=1,m=1,number,break1; scanf("%d%d",&[[anthology]],&n2); if ([[anthology]]==1||n2==1) printf("1\n"); else { a[0]=[[anthology]]; b[0]=n2; while([[anthology]]>1) { if ([[anthology]]%2==0) { [[anthology]]=[[anthology]]/2; a[i]=[[anthology]]; i++; } else {[[anthology]]=([[anthology]]-1)/2;a[i]=[[anthology]];i++;} j++; } while(n2>1) { if (n2%2==0) { n2=n2/2; b[m]=n2; m++; } else {n2=(n2-1)/2;b[m]=n2;m++;} k++; } for (i=0;i<j;i++) { for (m=0;m<k;m++) { if (a[i]==b[m]) { number=a[i]; break1=0; break; } } if (break1==0) break; } printf("%d",number); } return 0; }


--------------------------------------------- Result 10 ---------------------------------------------
[[0 (-8794%)]] --> [[[FAILED]]]

[[[[Code]]]]: int main() { char a[100],*p1,*p2,str[100]; gets(a); p1=a; p2=str; int num=0; while(*p1!='\0'){ if ((*p1)>='0'&&(*p1)<='9') {*p2=*p1; p1++;p2++; num=0; } if (((*p1)<'0'||(*p1)>'9')&&num==0) {*p2='\0'; p2=str; cout<<p2<<endl; p1++; num++;} if (((*p1)<'0'||(*p1)>'9')&&num>0) p1++; } return 0; }
[[[[Adv]]]]: int main() { char [[a]][100],*p1,*p2,str[100]; gets([[a]]); p1=[[a]]; p2=str; int [[num]]=0; while(*p1!='\0'){ if ((*p1)>='0'&&(*p1)<='9') {*p2=*p1; p1++;p2++; [[num]]=0; } if (((*p1)<'0'||(*p1)>'9')&&[[num]]==0) {*p2='\0'; p2=str; cout<<p2<<endl; p1++; [[num]]++;} if (((*p1)<'0'||(*p1)>'9')&&[[num]]>0) p1++; } return 0; }

[[[[Code]]]]: int main() { char a[100],*p1,*p2,str[100]; gets(a); p1=a; p2=str; int num=0; while(*p1!='\0'){ if ((*p1)>='0'&&(*p1)<='9') {*p2=*p1; p1++;p2++; num=0; } if (((*p1)<'0'||(*p1)>'9')&&num==0) {*p2='\0'; p2=str; cout<<p2<<endl; p1++; num++;} if (((*p1)<'0'||(*p1)>'9')&&num>0) p1++; } return 0; }
[[[[Adv]]]]: int main() { char [[latter]][100],*p1,*p2,str[100]; gets([[latter]]); p1=[[latter]]; p2=str; int [[nobs]]=0; while(*p1!='\0'){ if ((*p1)>='0'&&(*p1)<='9') {*p2=*p1; p1++;p2++; [[nobs]]=0; } if (((*p1)<'0'||(*p1)>'9')&&[[nobs]]==0) {*p2='\0'; p2=str; cout<<p2<<endl; p1++; [[nobs]]++;} if (((*p1)<'0'||(*p1)>'9')&&[[nobs]]>0) p1++; } return 0; }


--------------------------------------------- Result 11 ---------------------------------------------
[[0 (-9440%)]] --> [[[FAILED]]]

[[[[Code]]]]: int main() { int n,i; int a=0,b=0,c=0,d=0; int age[100]; float aa,bb,cc,dd; scanf("%d",&n); for (i=0;i<n;i++) scanf("%d",&age[i]); for (i=0;i<n;i++) {if (age[i]<=18) a=a+1; if (age[i]>=19&&age[i]<=35) b=b+1; if (age[i]>=36&&age[i]<=60) c=c+1; if (age[i]>60) d=d+1;} aa=(float)a/n;bb=(float)b/n;cc=(float)c/n;dd=(float)d/n; printf ("1-18: %.2f%%\n",100*aa); printf ("19-35: %.2f%%\n",100*bb); printf ("36-60: %.2f%%\n",100*cc); printf ("60??: %.2f%%",100*dd); return 0; }
[[[[Adv]]]]: int main() { int [[n]],i; int [[a]]=0,b=0,c=0,d=0; int [[age]][100]; float [[aa]],bb,cc,dd; scanf("%d",&[[n]]); for (i=0;i<[[n]];i++) scanf("%d",&[[age]][i]); for (i=0;i<[[n]];i++) {if ([[age]][i]<=18) [[a]]=[[a]]+1; if ([[age]][i]>=19&&[[age]][i]<=35) b=b+1; if ([[age]][i]>=36&&[[age]][i]<=60) c=c+1; if ([[age]][i]>60) d=d+1;} [[aa]]=(float)[[a]]/[[n]];bb=(float)b/[[n]];cc=(float)c/[[n]];dd=(float)d/[[n]]; printf ("1-18: %.2f%%\n",100*[[aa]]); printf ("19-35: %.2f%%\n",100*bb); printf ("36-60: %.2f%%\n",100*cc); printf ("60??: %.2f%%",100*dd); return 0; }

[[[[Code]]]]: int main() { int n,i; int a=0,b=0,c=0,d=0; int age[100]; float aa,bb,cc,dd; scanf("%d",&n); for (i=0;i<n;i++) scanf("%d",&age[i]); for (i=0;i<n;i++) {if (age[i]<=18) a=a+1; if (age[i]>=19&&age[i]<=35) b=b+1; if (age[i]>=36&&age[i]<=60) c=c+1; if (age[i]>60) d=d+1;} aa=(float)a/n;bb=(float)b/n;cc=(float)c/n;dd=(float)d/n; printf ("1-18: %.2f%%\n",100*aa); printf ("19-35: %.2f%%\n",100*bb); printf ("36-60: %.2f%%\n",100*cc); printf ("60??: %.2f%%",100*dd); return 0; }
[[[[Adv]]]]: int main() { int [[latitude]],i; int [[otra]]=0,b=0,c=0,d=0; int [[vieux]][100]; float [[landowner]],bb,cc,dd; scanf("%d",&[[latitude]]); for (i=0;i<[[latitude]];i++) scanf("%d",&[[vieux]][i]); for (i=0;i<[[latitude]];i++) {if ([[vieux]][i]<=18) [[otra]]=[[otra]]+1; if ([[vieux]][i]>=19&&[[vieux]][i]<=35) b=b+1; if ([[vieux]][i]>=36&&[[vieux]][i]<=60) c=c+1; if ([[vieux]][i]>60) d=d+1;} [[landowner]]=(float)[[otra]]/[[latitude]];bb=(float)b/[[latitude]];cc=(float)c/[[latitude]];dd=(float)d/[[latitude]]; printf ("1-18: %.2f%%\n",100*[[landowner]]); printf ("19-35: %.2f%%\n",100*bb); printf ("36-60: %.2f%%\n",100*cc); printf ("60??: %.2f%%",100*dd); return 0; }


--------------------------------------------- Result 12 ---------------------------------------------
[Succeeded / Failed / Skipped / Total] 0 / 12 / 0 / 12:   0%|          | 12/11998 [00:26<7:29:12,  2.25s/it][Succeeded / Failed / Skipped / Total] 0 / 12 / 0 / 12:   0%|          | 13/11998 [00:31<8:06:50,  2.44s/it][Succeeded / Failed / Skipped / Total] 0 / 13 / 0 / 13:   0%|          | 13/11998 [00:31<8:06:51,  2.44s/it][Succeeded / Failed / Skipped / Total] 0 / 13 / 0 / 13:   0%|          | 14/11998 [00:35<8:25:13,  2.53s/it][Succeeded / Failed / Skipped / Total] 0 / 14 / 0 / 14:   0%|          | 14/11998 [00:35<8:25:14,  2.53s/it][Succeeded / Failed / Skipped / Total] 0 / 14 / 0 / 14:   0%|          | 15/11998 [00:37<8:16:33,  2.49s/it][[0 (-9291%)]] --> [[[FAILED]]]

[[[[Code]]]]: /*???? ?? ??????????????????345?????????????????????????100??50??20??10??5??1??????????????????? ???? ????1000????? ???? ??????????????????????100??50??20??10??5??1???????*/ int main() { int n; scanf("%d",&n); int a,b,c,d,e,f; a=(n-n%100)/100; b=((n-a*100)-(n-a*100)%50)/50; if((n-a*100-b*50)>=20) { c=((n-a*100-b*50)-(n-a*100-b*50)%20)/20; d=((n-a*100-b*50-c*20)-(n-a*100-b*50-c*20)%10)/10; } else if(((n-a*100-b*50)<20)&&((n-a*100-b*50)>=10)) {c=0; d=((n-a*100-b*50)-(n-a*100-b*50)%10)/10; }else if(((n-a*100-b*50)<10)) { c=0; d=0; } if((n-a*100-b*50-c*20-d*10)>=5) { e=((n-a*100-b*50-c*20-d*10)-(n-a*100-b*50-c*20-d*10)%5)/5; f=n-a*100-b*50-c*20-d*10-e*5; } else if((n-a*100-b*50-c*20-d*10)<5){e=0;f=f=n-a*100-b*50-c*20-d*10-e*5;} printf("%d\n",a);printf("%d\n",b);printf("%d\n",c);printf("%d\n",d);printf("%d\n",e);printf("%d\n",f); return 0; }
[[[[Adv]]]]: int main() { int [[n]]; scanf("%d",&[[n]]); int [[a]],b,c,d,e,f; [[a]]=([[n]]-[[n]]%100)/100; b=(([[n]]-[[a]]*100)-([[n]]-[[a]]*100)%50)/50; if(([[n]]-[[a]]*100-b*50)>=20) { c=(([[n]]-[[a]]*100-b*50)-([[n]]-[[a]]*100-b*50)%20)/20; d=(([[n]]-[[a]]*100-b*50-c*20)-([[n]]-[[a]]*100-b*50-c*20)%10)/10; } else if((([[n]]-[[a]]*100-b*50)<20)&&(([[n]]-[[a]]*100-b*50)>=10)) {c=0; d=(([[n]]-[[a]]*100-b*50)-([[n]]-[[a]]*100-b*50)%10)/10; }else if((([[n]]-[[a]]*100-b*50)<10)) { c=0; d=0; } if(([[n]]-[[a]]*100-b*50-c*20-d*10)>=5) { e=(([[n]]-[[a]]*100-b*50-c*20-d*10)-([[n]]-[[a]]*100-b*50-c*20-d*10)%5)/5; f=[[n]]-[[a]]*100-b*50-c*20-d*10-e*5; } else if(([[n]]-[[a]]*100-b*50-c*20-d*10)<5){e=0;f=f=[[n]]-[[a]]*100-b*50-c*20-d*10-e*5;} printf("%d\n",[[a]]);printf("%d\n",b);printf("%d\n",c);printf("%d\n",d);printf("%d\n",e);printf("%d\n",f); return 0; }

[[[[Code]]]]: /*???? ?? ??????????????????345?????????????????????????100??50??20??10??5??1??????????????????? ???? ????1000????? ???? ??????????????????????100??50??20??10??5??1???????*/ int main() { int n; scanf("%d",&n); int a,b,c,d,e,f; a=(n-n%100)/100; b=((n-a*100)-(n-a*100)%50)/50; if((n-a*100-b*50)>=20) { c=((n-a*100-b*50)-(n-a*100-b*50)%20)/20; d=((n-a*100-b*50-c*20)-(n-a*100-b*50-c*20)%10)/10; } else if(((n-a*100-b*50)<20)&&((n-a*100-b*50)>=10)) {c=0; d=((n-a*100-b*50)-(n-a*100-b*50)%10)/10; }else if(((n-a*100-b*50)<10)) { c=0; d=0; } if((n-a*100-b*50-c*20-d*10)>=5) { e=((n-a*100-b*50-c*20-d*10)-(n-a*100-b*50-c*20-d*10)%5)/5; f=n-a*100-b*50-c*20-d*10-e*5; } else if((n-a*100-b*50-c*20-d*10)<5){e=0;f=f=n-a*100-b*50-c*20-d*10-e*5;} printf("%d\n",a);printf("%d\n",b);printf("%d\n",c);printf("%d\n",d);printf("%d\n",e);printf("%d\n",f); return 0; }
[[[[Adv]]]]: int main() { int [[sodium]]; scanf("%d",&[[sodium]]); int [[the]],b,c,d,e,f; [[the]]=([[sodium]]-[[sodium]]%100)/100; b=(([[sodium]]-[[the]]*100)-([[sodium]]-[[the]]*100)%50)/50; if(([[sodium]]-[[the]]*100-b*50)>=20) { c=(([[sodium]]-[[the]]*100-b*50)-([[sodium]]-[[the]]*100-b*50)%20)/20; d=(([[sodium]]-[[the]]*100-b*50-c*20)-([[sodium]]-[[the]]*100-b*50-c*20)%10)/10; } else if((([[sodium]]-[[the]]*100-b*50)<20)&&(([[sodium]]-[[the]]*100-b*50)>=10)) {c=0; d=(([[sodium]]-[[the]]*100-b*50)-([[sodium]]-[[the]]*100-b*50)%10)/10; }else if((([[sodium]]-[[the]]*100-b*50)<10)) { c=0; d=0; } if(([[sodium]]-[[the]]*100-b*50-c*20-d*10)>=5) { e=(([[sodium]]-[[the]]*100-b*50-c*20-d*10)-([[sodium]]-[[the]]*100-b*50-c*20-d*10)%5)/5; f=[[sodium]]-[[the]]*100-b*50-c*20-d*10-e*5; } else if(([[sodium]]-[[the]]*100-b*50-c*20-d*10)<5){e=0;f=f=[[sodium]]-[[the]]*100-b*50-c*20-d*10-e*5;} printf("%d\n",[[the]]);printf("%d\n",b);printf("%d\n",c);printf("%d\n",d);printf("%d\n",e);printf("%d\n",f); return 0; }


--------------------------------------------- Result 13 ---------------------------------------------
[[0 (-9944%)]] --> [[[FAILED]]]

[[[[Code]]]]: void line(int a,int x[],int num) { x[num]=a; num++; if(a==1) { return; } else{ if(a%2==0) { line(a/2,x,num); } else{ line((a-1)/2,x,num); } } } int main() { int x[101],y[101]; int i,j,k,flag=0; int a,b; memset(x,0,sizeof(x)); memset(y,0,sizeof(y)); cin>>a>>b; line(a,x,1); line(b,y,1); for(i=1;x[i]!=0;i++) { for(j=1;y[j]!=0;j++) { if(x[i]==y[j]) { cout<<x[i]<<endl; flag=1; break; } if(flag==1) { break; } } } return 0; }
[[[[Adv]]]]: void line(int [[a]],int x[],int [[num]]) { [[x]][[[num]]]=[[a]]; [[num]]++; if([[a]]==1) { return; } else{ if([[a]]%2==0) { line([[a]]/2,[[x]],[[num]]); } else{ line(([[a]]-1)/2,[[x]],[[num]]); } } } int main() { int [[x]][101],y[101]; int [[i]],j,k,flag=0; int [[a]],b; memset([[x]],0,sizeof([[x]])); memset(y,0,sizeof(y)); cin>>[[a]]>>b; line([[a]],[[x]],1); line(b,y,1); for([[i]]=1;[[x]][[[i]]]!=0;[[i]]++) { for(j=1;y[j]!=0;j++) { if([[x]][[[i]]]==y[j]) { cout<<[[x]][[[i]]]<<endl; flag=1; break; } if(flag==1) { break; } } } return 0; }

[[[[Code]]]]: void line(int a,int x[],int num) { x[num]=a; num++; if(a==1) { return; } else{ if(a%2==0) { line(a/2,x,num); } else{ line((a-1)/2,x,num); } } } int main() { int x[101],y[101]; int i,j,k,flag=0; int a,b; memset(x,0,sizeof(x)); memset(y,0,sizeof(y)); cin>>a>>b; line(a,x,1); line(b,y,1); for(i=1;x[i]!=0;i++) { for(j=1;y[j]!=0;j++) { if(x[i]==y[j]) { cout<<x[i]<<endl; flag=1; break; } if(flag==1) { break; } } } return 0; }
[[[[Adv]]]]: void line(int [[per]],int x[],int [[fig]]) { [[cms]][[[fig]]]=[[by]]; [[fig]]++; if([[by]]==1) { return; } else{ if([[by]]%2==0) { line([[by]]/2,[[cms]],[[fig]]); } else{ line(([[by]]-1)/2,[[cms]],[[fig]]); } } } int main() { int [[cms]][101],y[101]; int [[y]],j,k,flag=0; int [[by]],b; memset([[cms]],0,sizeof([[cms]])); memset(y,0,sizeof(y)); cin>>[[by]]>>b; line([[by]],[[cms]],1); line(b,y,1); for([[y]]=1;[[cms]][[[y]]]!=0;[[y]]++) { for(j=1;y[j]!=0;j++) { if([[cms]][[[y]]]==y[j]) { cout<<[[cms]][[[y]]]<<endl; flag=1; break; } if(flag==1) { break; } } } return 0; }


--------------------------------------------- Result 14 ---------------------------------------------
[[0 (-9922%)]] --> [[[FAILED]]]

[[[[Code]]]]: int main(){ int n,m; char sb[24]; scanf("%d",&n); for(int i=0;i<n;i++){ m=0; scanf("%s",sb); for(int k=0;sb[k]!='\0';k++){ if(!((sb[k]=='_')||(sb[k]>='0'&&sb[k]<='9')||(sb[k]>='a'&&sb[k]<='z')||(sb[k]>='A'&&sb[k]<='Z'))){ m=1; } } if(!(sb[0]=='_'||(sb[0]>='a'&&sb[0]<='z')||(sb[0]>='A'&&sb[0]<='Z'))){ m=1; } if(m==1) printf("no\n"); else printf("yes\n"); } return 0; }
[[[[Adv]]]]: int main(){ int [[n]],m; char [[sb]][24]; scanf("%d",&[[n]]); for(int [[i]]=0;[[i]]<[[n]];[[i]]++){ m=0; scanf("%s",[[sb]]); for(int [[k]]=0;[[sb]][[[k]]]!='\0';[[k]]++){ if(!(([[sb]][[[k]]]=='_')||([[sb]][[[k]]]>='0'&&[[sb]][[[k]]]<='9')||([[sb]][[[k]]]>='a'&&[[sb]][[[k]]]<='z')||([[sb]][[[k]]]>='A'&&[[sb]][[[k]]]<='Z'))){ m=1; } } if(!([[sb]][0]=='_'||([[sb]][0]>='a'&&[[sb]][0]<='z')||([[sb]][0]>='A'&&[[sb]][0]<='Z'))){ m=1; } if(m==1) printf("no\n"); else printf("yes\n"); } return 0; }

[[[[Code]]]]: int main(){ int n,m; char sb[24]; scanf("%d",&n); for(int i=0;i<n;i++){ m=0; scanf("%s",sb); for(int k=0;sb[k]!='\0';k++){ if(!((sb[k]=='_')||(sb[k]>='0'&&sb[k]<='9')||(sb[k]>='a'&&sb[k]<='z')||(sb[k]>='A'&&sb[k]<='Z'))){ m=1; } } if(!(sb[0]=='_'||(sb[0]>='a'&&sb[0]<='z')||(sb[0]>='A'&&sb[0]<='Z'))){ m=1; } if(m==1) printf("no\n"); else printf("yes\n"); } return 0; }
[[[[Adv]]]]: int main(){ int [[seconds]],m; char [[uss]][24]; scanf("%d",&[[seconds]]); for(int [[wanted]]=0;[[wanted]]<[[seconds]];[[wanted]]++){ m=0; scanf("%s",[[uss]]); for(int [[sg]]=0;[[uss]][[[sg]]]!='\0';[[sg]]++){ if(!(([[uss]][[[sg]]]=='_')||([[uss]][[[sg]]]>='0'&&[[uss]][[[sg]]]<='9')||([[uss]][[[sg]]]>='a'&&[[uss]][[[sg]]]<='z')||([[uss]][[[sg]]]>='A'&&[[uss]][[[sg]]]<='Z'))){ m=1; } } if(!([[uss]][0]=='_'||([[uss]][0]>='a'&&[[uss]][0]<='z')||([[uss]][0]>='A'&&[[uss]][0]<='Z'))){ m=1; } if(m==1) printf("no\n"); else printf("yes\n"); } return 0; }


--------------------------------------------- Result 15 ---------------------------------------------
[Succeeded / Failed / Skipped / Total] 0 / 15 / 0 / 15:   0%|          | 15/11998 [00:37<8:16:34,  2.49s/it][Succeeded / Failed / Skipped / Total] 0 / 15 / 0 / 15:   0%|          | 16/11998 [00:38<7:57:09,  2.39s/it][Succeeded / Failed / Skipped / Total] 0 / 16 / 0 / 16:   0%|          | 16/11998 [00:38<7:57:10,  2.39s/it][Succeeded / Failed / Skipped / Total] 0 / 16 / 0 / 16:   0%|          | 17/11998 [00:40<7:52:42,  2.37s/it][Succeeded / Failed / Skipped / Total] 0 / 17 / 0 / 17:   0%|          | 17/11998 [00:40<7:52:43,  2.37s/it][Succeeded / Failed / Skipped / Total] 0 / 17 / 0 / 17:   0%|          | 18/11998 [00:42<7:46:40,  2.34s/it][[0 (-10495%)]] --> [[[FAILED]]]

[[[[Code]]]]: int main() { int i,n,a[n],x,y; int *p; scanf("%d",&n); for(p=a;p<n+a;p++) scanf("%d",&*p); p=a; x=a[0]; for(i=0;i<n;i++) if(x<*(p+i))x=*(p+i); if(x==*a) { y=a[0]-1; for(i=0;i<n;i++) if(y<*p&&*p<a[0])y=*p++; } if(x!=a[0]) { y=a[0]; for(i=0;i<n;i++) if(y<a[i]&&a[i]<x)y=a[i]; } printf("%d\n%d\n",x,y); return 0; }
[[[[Adv]]]]: int main() { int [[i]],n,a[n],x,y; int *[[p]]; scanf("%d",&n); for([[p]]=a;[[p]]<n+a;[[p]]++) scanf("%d",&*[[p]]); [[p]]=a; x=a[0]; for([[i]]=0;[[i]]<n;[[i]]++) if(x<*([[p]]+[[i]]))x=*([[p]]+[[i]]); if(x==*a) { y=a[0]-1; for([[i]]=0;[[i]]<n;[[i]]++) if(y<*[[p]]&&*[[p]]<a[0])y=*[[p]]++; } if(x!=a[0]) { y=a[0]; for([[i]]=0;[[i]]<n;[[i]]++) if(y<a[[[i]]]&&a[[[i]]]<x)y=a[[[i]]]; } printf("%d\n%d\n",x,y); return 0; }

[[[[Code]]]]: int main() { int i,n,a[n],x,y; int *p; scanf("%d",&n); for(p=a;p<n+a;p++) scanf("%d",&*p); p=a; x=a[0]; for(i=0;i<n;i++) if(x<*(p+i))x=*(p+i); if(x==*a) { y=a[0]-1; for(i=0;i<n;i++) if(y<*p&&*p<a[0])y=*p++; } if(x!=a[0]) { y=a[0]; for(i=0;i<n;i++) if(y<a[i]&&a[i]<x)y=a[i]; } printf("%d\n%d\n",x,y); return 0; }
[[[[Adv]]]]: int main() { int [[y]],n,a[n],x,y; int *[[j]]; scanf("%d",&n); for([[j]]=a;[[j]]<n+a;[[j]]++) scanf("%d",&*[[j]]); [[j]]=a; x=a[0]; for([[y]]=0;[[y]]<n;[[y]]++) if(x<*([[j]]+[[y]]))x=*([[j]]+[[y]]); if(x==*a) { y=a[0]-1; for([[y]]=0;[[y]]<n;[[y]]++) if(y<*[[j]]&&*[[j]]<a[0])y=*[[j]]++; } if(x!=a[0]) { y=a[0]; for([[y]]=0;[[y]]<n;[[y]]++) if(y<a[[[y]]]&&a[[[y]]]<x)y=a[[[y]]]; } printf("%d\n%d\n",x,y); return 0; }


--------------------------------------------- Result 16 ---------------------------------------------
[[0 (-10501%)]] --> [[[FAILED]]]

[[[[Code]]]]: int main() { int a[5][5],m,n,i,j,(*p)[5],temp; p=a; for(i=0;i<5;i++) { for(j=0;j<5;j++) scanf("%d",(*(p+i)+j)); } scanf("%d %d",&m,&n); if(n>4||n<0||m>4||m<0) printf("error\n"); else{ for(i=0;i<5;i++) { temp=*(*(p+m)+i); *(*(p+m)+i)=*(*(p+n)+i); *(*(p+n)+i)=temp; } for(i=0;i<5;i++) { for(j=0;j<5;j++) if(j==0) printf("%d",*(*(p+i)+j)); else printf(" %d",*(*(p+i)+j)); printf("\n"); } } return 0; }
[[[[Adv]]]]: int main() { int [[a]][5][5],m,n,i,j,(*p)[5],temp; p=[[a]]; for(i=0;i<5;i++) { for(j=0;j<5;j++) scanf("%d",(*(p+i)+j)); } scanf("%d %d",&m,&n); if(n>4||n<0||m>4||m<0) printf("error\n"); else{ for(i=0;i<5;i++) { temp=*(*(p+m)+i); *(*(p+m)+i)=*(*(p+n)+i); *(*(p+n)+i)=temp; } for(i=0;i<5;i++) { for(j=0;j<5;j++) if(j==0) printf("%d",*(*(p+i)+j)); else printf(" %d",*(*(p+i)+j)); printf("\n"); } } return 0; }

[[[[Code]]]]: int main() { int a[5][5],m,n,i,j,(*p)[5],temp; p=a; for(i=0;i<5;i++) { for(j=0;j<5;j++) scanf("%d",(*(p+i)+j)); } scanf("%d %d",&m,&n); if(n>4||n<0||m>4||m<0) printf("error\n"); else{ for(i=0;i<5;i++) { temp=*(*(p+m)+i); *(*(p+m)+i)=*(*(p+n)+i); *(*(p+n)+i)=temp; } for(i=0;i<5;i++) { for(j=0;j<5;j++) if(j==0) printf("%d",*(*(p+i)+j)); else printf(" %d",*(*(p+i)+j)); printf("\n"); } } return 0; }
[[[[Adv]]]]: int main() { int [[latter]][5][5],m,n,i,j,(*p)[5],temp; p=[[latter]]; for(i=0;i<5;i++) { for(j=0;j<5;j++) scanf("%d",(*(p+i)+j)); } scanf("%d %d",&m,&n); if(n>4||n<0||m>4||m<0) printf("error\n"); else{ for(i=0;i<5;i++) { temp=*(*(p+m)+i); *(*(p+m)+i)=*(*(p+n)+i); *(*(p+n)+i)=temp; } for(i=0;i<5;i++) { for(j=0;j<5;j++) if(j==0) printf("%d",*(*(p+i)+j)); else printf(" %d",*(*(p+i)+j)); printf("\n"); } } return 0; }


--------------------------------------------- Result 17 ---------------------------------------------
[[0 (-9279%)]] --> [[[FAILED]]]

[[[[Code]]]]: /********************************************** /* ? ?: ??13 /* ? ?: ??????0????N??????100?? /* ???????13???????????? /* ? ?: ??? 1200012861 /* ? ?: 2012?11?10? **********************************************/ int main() { int i = 0, j, k, count = 0, product[100] = {0}, remainder = 0, dividend; char num[100] = {0}; do { cin.get(num[i]); i++; } while(num[i - 1] != '\n'); if (i == 2) //???????,????0???,????? cout << "0" << '\n' << num[0] << "\n"; else { dividend = (num[0] - 48) * 10 + (num[1] - 48); //?????,?????????????? for (k = 0; k < i - 2; k++) { product[k] = floor(dividend / 13); //?????????? remainder = dividend - 13 * product[k]; //????????,????????????13??? dividend = remainder * 10 + (num[k + 2] - 48); //?????,??????? } if ((product[0] == 0) && (product[1] == 0)) //??????????0,?????0,??0 cout << "0" << endl; if (product[0] != 0) //????????0,?????? { for (k = 0; k < i - 2; k++) cout << product[k]; cout << endl; } if ((product[0] == 0) && (product[1] != 0)) //????????0,???0,??????????? { for (k = 1; k < i - 2; k++) cout << product[k]; cout << endl; } cout << remainder << endl; } return 0; }
[[[[Adv]]]]: int main() { int [[i]] = 0, j, k, count = 0, product[100] = {0}, remainder = 0, dividend; char [[num]][100] = {0}; do { cin.get([[num]][[[i]]]); [[i]]++; } while([[num]][[[i]] - 1] != '\n'); if ([[i]] == 2) cout << "0" << '\n' << [[num]][0] << "\n"; else { dividend = ([[num]][0] - 48) * 10 + ([[num]][1] - 48); for (k = 0; k < [[i]] - 2; k++) { product[k] = floor(dividend / 13); remainder = dividend - 13 * product[k]; dividend = remainder * 10 + ([[num]][k + 2] - 48); } if ((product[0] == 0) && (product[1] == 0)) cout << "0" << endl; if (product[0] != 0) { for (k = 0; k < [[i]] - 2; k++) cout << product[k]; cout << endl; } if ((product[0] == 0) && (product[1] != 0)) { for (k = 1; k < [[i]] - 2; k++) cout << product[k]; cout << endl; } cout << remainder << endl; } return 0; }

[[[[Code]]]]: /********************************************** /* ? ?: ??13 /* ? ?: ??????0????N??????100?? /* ???????13???????????? /* ? ?: ??? 1200012861 /* ? ?: 2012?11?10? **********************************************/ int main() { int i = 0, j, k, count = 0, product[100] = {0}, remainder = 0, dividend; char num[100] = {0}; do { cin.get(num[i]); i++; } while(num[i - 1] != '\n'); if (i == 2) //???????,????0???,????? cout << "0" << '\n' << num[0] << "\n"; else { dividend = (num[0] - 48) * 10 + (num[1] - 48); //?????,?????????????? for (k = 0; k < i - 2; k++) { product[k] = floor(dividend / 13); //?????????? remainder = dividend - 13 * product[k]; //????????,????????????13??? dividend = remainder * 10 + (num[k + 2] - 48); //?????,??????? } if ((product[0] == 0) && (product[1] == 0)) //??????????0,?????0,??0 cout << "0" << endl; if (product[0] != 0) //????????0,?????? { for (k = 0; k < i - 2; k++) cout << product[k]; cout << endl; } if ((product[0] == 0) && (product[1] != 0)) //????????0,???0,??????????? { for (k = 1; k < i - 2; k++) cout << product[k]; cout << endl; } cout << remainder << endl; } return 0; }
[[[[Adv]]]]: int main() { int [[let]] = 0, j, k, count = 0, product[100] = {0}, remainder = 0, dividend; char [[lett]][100] = {0}; do { cin.get([[lett]][[[let]]]); [[let]]++; } while([[lett]][[[let]] - 1] != '\n'); if ([[let]] == 2) cout << "0" << '\n' << [[lett]][0] << "\n"; else { dividend = ([[lett]][0] - 48) * 10 + ([[lett]][1] - 48); for (k = 0; k < [[let]] - 2; k++) { product[k] = floor(dividend / 13); remainder = dividend - 13 * product[k]; dividend = remainder * 10 + ([[lett]][k + 2] - 48); } if ((product[0] == 0) && (product[1] == 0)) cout << "0" << endl; if (product[0] != 0) { for (k = 0; k < [[let]] - 2; k++) cout << product[k]; cout << endl; } if ((product[0] == 0) && (product[1] != 0)) { for (k = 1; k < [[let]] - 2; k++) cout << product[k]; cout << endl; } cout << remainder << endl; } return 0; }


--------------------------------------------- Result 18 ---------------------------------------------
[Succeeded / Failed / Skipped / Total] 0 / 18 / 0 / 18:   0%|          | 18/11998 [00:42<7:46:41,  2.34s/it][Succeeded / Failed / Skipped / Total] 0 / 18 / 0 / 18:   0%|          | 19/11998 [00:44<7:43:12,  2.32s/it][Succeeded / Failed / Skipped / Total] 0 / 19 / 0 / 19:   0%|          | 19/11998 [00:44<7:43:12,  2.32s/it][Succeeded / Failed / Skipped / Total] 0 / 19 / 0 / 19:   0%|          | 20/11998 [00:45<7:29:35,  2.25s/it][Succeeded / Failed / Skipped / Total] 0 / 20 / 0 / 20:   0%|          | 20/11998 [00:45<7:29:35,  2.25s/it][Succeeded / Failed / Skipped / Total] 0 / 20 / 0 / 20:   0%|          | 21/11998 [00:47<7:34:55,  2.28s/it][[0 (-10175%)]] --> [[[FAILED]]]

[[[[Code]]]]: int main() { int a[501] = { 0 }; int i , n , j , flag , max; cin >> n; max = 0; for (i = 1; i <= n; i++) { cin >> j; if (j > max) max = j; if (j % 2 == 1) a[j] ++; } flag = 1; for (i = 1; i <= max; i += 2) if (a[i] != 0) if (flag == 1) { flag = 0; cout << i; } else cout << "," << i; cout << endl; return 0; }
[[[[Adv]]]]: int main() { int [[a]][501] = { 0 }; int [[i]] , n , j , flag , max; cin >> n; max = 0; for ([[i]] = 1; [[i]] <= n; [[i]]++) { cin >> j; if (j > max) max = j; if (j % 2 == 1) [[a]][j] ++; } flag = 1; for ([[i]] = 1; [[i]] <= max; [[i]] += 2) if ([[a]][[[i]]] != 0) if (flag == 1) { flag = 0; cout << [[i]]; } else cout << "," << [[i]]; cout << endl; return 0; }

[[[[Code]]]]: int main() { int a[501] = { 0 }; int i , n , j , flag , max; cin >> n; max = 0; for (i = 1; i <= n; i++) { cin >> j; if (j > max) max = j; if (j % 2 == 1) a[j] ++; } flag = 1; for (i = 1; i <= max; i += 2) if (a[i] != 0) if (flag == 1) { flag = 0; cout << i; } else cout << "," << i; cout << endl; return 0; }
[[[[Adv]]]]: int main() { int [[oona]][501] = { 0 }; int [[wantto]] , n , j , flag , max; cin >> n; max = 0; for ([[wantto]] = 1; [[wantto]] <= n; [[wantto]]++) { cin >> j; if (j > max) max = j; if (j % 2 == 1) [[oona]][j] ++; } flag = 1; for ([[wantto]] = 1; [[wantto]] <= max; [[wantto]] += 2) if ([[oona]][[[wantto]]] != 0) if (flag == 1) { flag = 0; cout << [[wantto]]; } else cout << "," << [[wantto]]; cout << endl; return 0; }


--------------------------------------------- Result 19 ---------------------------------------------
[[0 (-10425%)]] --> [[[FAILED]]]

[[[[Code]]]]: int main() { char str[300],s[300],temp; int i,k=0,j=0,m=0,n=0,count=1; scanf("%s",str); n=strlen(str); for(i=0;i<n;i++) { if(str[i]>='a'&&str[i]<='z') { s[k]=str[i]; k=k+1; } } if(k==0) { printf("No"); } else if(k==1) { printf("%c=1",s[0]); printf("\n"); } else { for(i=k-1;i>0;i--) { for(j=0;j<i;j++) { if(s[j+1]<s[j]) { temp=s[j+1]; s[j+1]=s[j]; s[j]=temp; } } } for(i=0;i<k;i++) { if(s[i]==s[i+1]) { count++; if(i==k-2) { printf("%c=%d",s[i],count); } } if(s[i]<s[i+1]&&i<k-2) { printf("%c=%d",s[i],count); printf("\n"); count=1; } if(s[i]<s[i+1]&&i==k-2) { printf("%c=%d",s[i],count); printf("\n"); printf("%c=1",s[k-1]); printf("\n"); } } } return 0; }
[[[[Adv]]]]: int main() { char [[str]][300],s[300],temp; int [[i]],k=0,j=0,m=0,n=0,count=1; scanf("%s",[[str]]); n=strlen([[str]]); for([[i]]=0;[[i]]<n;[[i]]++) { if([[str]][[[i]]]>='a'&&[[str]][[[i]]]<='z') { s[k]=[[str]][[[i]]]; k=k+1; } } if(k==0) { printf("No"); } else if(k==1) { printf("%c=1",s[0]); printf("\n"); } else { for([[i]]=k-1;[[i]]>0;[[i]]--) { for(j=0;j<[[i]];j++) { if(s[j+1]<s[j]) { temp=s[j+1]; s[j+1]=s[j]; s[j]=temp; } } } for([[i]]=0;[[i]]<k;[[i]]++) { if(s[[[i]]]==s[[[i]]+1]) { count++; if([[i]]==k-2) { printf("%c=%d",s[[[i]]],count); } } if(s[[[i]]]<s[[[i]]+1]&&[[i]]<k-2) { printf("%c=%d",s[[[i]]],count); printf("\n"); count=1; } if(s[[[i]]]<s[[[i]]+1]&&[[i]]==k-2) { printf("%c=%d",s[[[i]]],count); printf("\n"); printf("%c=1",s[k-1]); printf("\n"); } } } return 0; }

[[[[Code]]]]: int main() { char str[300],s[300],temp; int i,k=0,j=0,m=0,n=0,count=1; scanf("%s",str); n=strlen(str); for(i=0;i<n;i++) { if(str[i]>='a'&&str[i]<='z') { s[k]=str[i]; k=k+1; } } if(k==0) { printf("No"); } else if(k==1) { printf("%c=1",s[0]); printf("\n"); } else { for(i=k-1;i>0;i--) { for(j=0;j<i;j++) { if(s[j+1]<s[j]) { temp=s[j+1]; s[j+1]=s[j]; s[j]=temp; } } } for(i=0;i<k;i++) { if(s[i]==s[i+1]) { count++; if(i==k-2) { printf("%c=%d",s[i],count); } } if(s[i]<s[i+1]&&i<k-2) { printf("%c=%d",s[i],count); printf("\n"); count=1; } if(s[i]<s[i+1]&&i==k-2) { printf("%c=%d",s[i],count); printf("\n"); printf("%c=1",s[k-1]); printf("\n"); } } } return 0; }
[[[[Adv]]]]: int main() { char [[ets]][300],s[300],temp; int [[siento]],k=0,j=0,m=0,n=0,count=1; scanf("%s",[[ets]]); n=strlen([[ets]]); for([[siento]]=0;[[siento]]<n;[[siento]]++) { if([[ets]][[[siento]]]>='a'&&[[ets]][[[siento]]]<='z') { s[k]=[[ets]][[[siento]]]; k=k+1; } } if(k==0) { printf("No"); } else if(k==1) { printf("%c=1",s[0]); printf("\n"); } else { for([[siento]]=k-1;[[siento]]>0;[[siento]]--) { for(j=0;j<[[siento]];j++) { if(s[j+1]<s[j]) { temp=s[j+1]; s[j+1]=s[j]; s[j]=temp; } } } for([[siento]]=0;[[siento]]<k;[[siento]]++) { if(s[[[siento]]]==s[[[siento]]+1]) { count++; if([[siento]]==k-2) { printf("%c=%d",s[[[siento]]],count); } } if(s[[[siento]]]<s[[[siento]]+1]&&[[siento]]<k-2) { printf("%c=%d",s[[[siento]]],count); printf("\n"); count=1; } if(s[[[siento]]]<s[[[siento]]+1]&&[[siento]]==k-2) { printf("%c=%d",s[[[siento]]],count); printf("\n"); printf("%c=1",s[k-1]); printf("\n"); } } } return 0; }


--------------------------------------------- Result 20 ---------------------------------------------
[[0 (-9522%)]] --> [[[FAILED]]]

[[[[Code]]]]: //????????? //20101116 ?? int main() { int n,pause[20],ps[20][20],sum[20],i,j;//pause[]???????ps[][]????????????sum[]??60?????? cin>>n; for(i=1;i<=n;i++) { cin>>pause[i]; //?????????? for(j=1;j<=pause[i];j++) cin>>ps[i][j]; //??????????? } for(i=1;i<=n;i++) { if(pause[i]==0) sum[i]=60; //????????60 for(j=1;j<=pause[i];j++) { if(ps[i][pause[i]]+3*pause[i]<=60) sum[i]=60-3*pause[i]; //???? else if((ps[i][j]+3*j<60)&&(ps[i][j+1]+3*j>60)) sum[i]=60-3*j; else if((ps[i][j]+3*j<60)&&(ps[i][j+1]+3*j<=60)&&(ps[i][j+1]+3*j+3>=60)) sum[i]=ps[i][j+1]; } cout<<sum[i]<<endl; //?? } return 0; }
[[[[Adv]]]]: int main() { int [[n]],pause[20],ps[20][20],sum[20],i,j; cin>>[[n]]; for(i=1;i<=[[n]];i++) { cin>>pause[i]; for(j=1;j<=pause[i];j++) cin>>ps[i][j]; } for(i=1;i<=[[n]];i++) { if(pause[i]==0) sum[i]=60; for(j=1;j<=pause[i];j++) { if(ps[i][pause[i]]+3*pause[i]<=60) sum[i]=60-3*pause[i]; else if((ps[i][j]+3*j<60)&&(ps[i][j+1]+3*j>60)) sum[i]=60-3*j; else if((ps[i][j]+3*j<60)&&(ps[i][j+1]+3*j<=60)&&(ps[i][j+1]+3*j+3>=60)) sum[i]=ps[i][j+1]; } cout<<sum[i]<<endl; } return 0; }

[[[[Code]]]]: //????????? //20101116 ?? int main() { int n,pause[20],ps[20][20],sum[20],i,j;//pause[]???????ps[][]????????????sum[]??60?????? cin>>n; for(i=1;i<=n;i++) { cin>>pause[i]; //?????????? for(j=1;j<=pause[i];j++) cin>>ps[i][j]; //??????????? } for(i=1;i<=n;i++) { if(pause[i]==0) sum[i]=60; //????????60 for(j=1;j<=pause[i];j++) { if(ps[i][pause[i]]+3*pause[i]<=60) sum[i]=60-3*pause[i]; //???? else if((ps[i][j]+3*j<60)&&(ps[i][j+1]+3*j>60)) sum[i]=60-3*j; else if((ps[i][j]+3*j<60)&&(ps[i][j+1]+3*j<=60)&&(ps[i][j+1]+3*j+3>=60)) sum[i]=ps[i][j+1]; } cout<<sum[i]<<endl; //?? } return 0; }
[[[[Adv]]]]: int main() { int [[latitude]],pause[20],ps[20][20],sum[20],i,j; cin>>[[latitude]]; for(i=1;i<=[[latitude]];i++) { cin>>pause[i]; for(j=1;j<=pause[i];j++) cin>>ps[i][j]; } for(i=1;i<=[[latitude]];i++) { if(pause[i]==0) sum[i]=60; for(j=1;j<=pause[i];j++) { if(ps[i][pause[i]]+3*pause[i]<=60) sum[i]=60-3*pause[i]; else if((ps[i][j]+3*j<60)&&(ps[i][j+1]+3*j>60)) sum[i]=60-3*j; else if((ps[i][j]+3*j<60)&&(ps[i][j+1]+3*j<=60)&&(ps[i][j+1]+3*j+3>=60)) sum[i]=ps[i][j+1]; } cout<<sum[i]<<endl; } return 0; }


--------------------------------------------- Result 21 ---------------------------------------------
[Succeeded / Failed / Skipped / Total] 0 / 21 / 0 / 21:   0%|          | 21/11998 [00:47<7:34:56,  2.28s/it][Succeeded / Failed / Skipped / Total] 0 / 21 / 0 / 21:   0%|          | 22/11998 [00:52<7:58:17,  2.40s/it][Succeeded / Failed / Skipped / Total] 0 / 22 / 0 / 22:   0%|          | 22/11998 [00:52<7:58:17,  2.40s/it][Succeeded / Failed / Skipped / Total] 0 / 22 / 0 / 22:   0%|          | 23/11998 [00:58<8:25:21,  2.53s/it][[0 (-9912%)]] --> [[[FAILED]]]

[[[[Code]]]]: int main() { char num[100]; int a, b; cin >> num; if (num[1] == '\0') cout << '0' << '\n' << num[0]; else { a = ((num[0] - '0') * 10 + (num[1] - '0')) / 13; b = ((num[0] - '0') * 10 + (num[1] - '0')) % 13; if (a != 0 || num[2] == '\0') cout << a; for (int i = 2; num[i] != '\0'; i++) { a = (b * 10 + (num[i] - '0')) / 13; b = (b * 10 + (num[i] - '0')) % 13; cout << a; } cout << '\n' << b << endl; } return 0; }
[[[[Adv]]]]: int main() { char num[100]; int [[a]], b; cin >> num; if (num[1] == '\0') cout << '0' << '\n' << num[0]; else { [[a]] = ((num[0] - '0') * 10 + (num[1] - '0')) / 13; b = ((num[0] - '0') * 10 + (num[1] - '0')) % 13; if ([[a]] != 0 || num[2] == '\0') cout << [[a]]; for (int i = 2; num[i] != '\0'; i++) { [[a]] = (b * 10 + (num[i] - '0')) / 13; b = (b * 10 + (num[i] - '0')) % 13; cout << [[a]]; } cout << '\n' << b << endl; } return 0; }

[[[[Code]]]]: int main() { char num[100]; int a, b; cin >> num; if (num[1] == '\0') cout << '0' << '\n' << num[0]; else { a = ((num[0] - '0') * 10 + (num[1] - '0')) / 13; b = ((num[0] - '0') * 10 + (num[1] - '0')) % 13; if (a != 0 || num[2] == '\0') cout << a; for (int i = 2; num[i] != '\0'; i++) { a = (b * 10 + (num[i] - '0')) / 13; b = (b * 10 + (num[i] - '0')) % 13; cout << a; } cout << '\n' << b << endl; } return 0; }
[[[[Adv]]]]: int main() { char num[100]; int [[è]], b; cin >> num; if (num[1] == '\0') cout << '0' << '\n' << num[0]; else { [[è]] = ((num[0] - '0') * 10 + (num[1] - '0')) / 13; b = ((num[0] - '0') * 10 + (num[1] - '0')) % 13; if ([[è]] != 0 || num[2] == '\0') cout << [[è]]; for (int i = 2; num[i] != '\0'; i++) { [[è]] = (b * 10 + (num[i] - '0')) / 13; b = (b * 10 + (num[i] - '0')) % 13; cout << [[è]]; } cout << '\n' << b << endl; } return 0; }


--------------------------------------------- Result 22 ---------------------------------------------
[[0 (-10358%)]] --> [[[FAILED]]]

[[[[Code]]]]: int main() {char s[1000][8]; double h[1000],zh[1000]; int n,i,j=0,m,r; scanf("%d",&n); m=n-1; for(i=0;i<n;i++){ scanf("%s",s[i]); if(s[i][0]=='m'){ scanf("%lf",&h[i]); zh[j]=h[i]; j++; }else{ scanf("%lf",&h[i]); zh[m]=h[i]; m--; } } for(i=1;i<j;i++){ double tmp=zh[i]; for(r=i-1;r>=0;r--){ if(tmp<zh[r]){ zh[r+1]=zh[r]; zh[r]=tmp; }else{ zh[r+1]=tmp; break; } } } for(i=0;i<n-j;i++){ for(r=j;r<n-i;r++){ if(zh[r]<zh[r+1]){ double tm=zh[r+1]; zh[r+1]=zh[r]; zh[r]=tm; } } } for(i=0;i<n-1;i++){ printf("%.2lf ",zh[i]); } printf("%.2lf",zh[n-1]); return 0; }
[[[[Adv]]]]: int main() {char [[s]][1000][8]; double [[h]][1000],zh[1000]; int [[n]],i,j=0,m,r; scanf("%d",&[[n]]); m=[[n]]-1; for(i=0;i<[[n]];i++){ scanf("%s",[[s]][i]); if([[s]][i][0]=='m'){ scanf("%lf",&[[h]][i]); zh[j]=[[h]][i]; j++; }else{ scanf("%lf",&[[h]][i]); zh[m]=[[h]][i]; m--; } } for(i=1;i<j;i++){ double [[tmp]]=zh[i]; for(r=i-1;r>=0;r--){ if([[tmp]]<zh[r]){ zh[r+1]=zh[r]; zh[r]=[[tmp]]; }else{ zh[r+1]=[[tmp]]; break; } } } for(i=0;i<[[n]]-j;i++){ for(r=j;r<[[n]]-i;r++){ if(zh[r]<zh[r+1]){ double tm=zh[r+1]; zh[r+1]=zh[r]; zh[r]=tm; } } } for(i=0;i<[[n]]-1;i++){ printf("%.2lf ",zh[i]); } printf("%.2lf",zh[[[n]]-1]); return 0; }

[[[[Code]]]]: int main() {char s[1000][8]; double h[1000],zh[1000]; int n,i,j=0,m,r; scanf("%d",&n); m=n-1; for(i=0;i<n;i++){ scanf("%s",s[i]); if(s[i][0]=='m'){ scanf("%lf",&h[i]); zh[j]=h[i]; j++; }else{ scanf("%lf",&h[i]); zh[m]=h[i]; m--; } } for(i=1;i<j;i++){ double tmp=zh[i]; for(r=i-1;r>=0;r--){ if(tmp<zh[r]){ zh[r+1]=zh[r]; zh[r]=tmp; }else{ zh[r+1]=tmp; break; } } } for(i=0;i<n-j;i++){ for(r=j;r<n-i;r++){ if(zh[r]<zh[r+1]){ double tm=zh[r+1]; zh[r+1]=zh[r]; zh[r]=tm; } } } for(i=0;i<n-1;i++){ printf("%.2lf ",zh[i]); } printf("%.2lf",zh[n-1]); return 0; }
[[[[Adv]]]]: int main() {char [[seconds]][1000][8]; double [[hour]][1000],zh[1000]; int [[latitude]],i,j=0,m,r; scanf("%d",&[[latitude]]); m=[[latitude]]-1; for(i=0;i<[[latitude]];i++){ scanf("%s",[[seconds]][i]); if([[seconds]][i][0]=='m'){ scanf("%lf",&[[hour]][i]); zh[j]=[[hour]][i]; j++; }else{ scanf("%lf",&[[hour]][i]); zh[m]=[[hour]][i]; m--; } } for(i=1;i<j;i++){ double [[bonita]]=zh[i]; for(r=i-1;r>=0;r--){ if([[bonita]]<zh[r]){ zh[r+1]=zh[r]; zh[r]=[[bonita]]; }else{ zh[r+1]=[[bonita]]; break; } } } for(i=0;i<[[latitude]]-j;i++){ for(r=j;r<[[latitude]]-i;r++){ if(zh[r]<zh[r+1]){ double tm=zh[r+1]; zh[r+1]=zh[r]; zh[r]=tm; } } } for(i=0;i<[[latitude]]-1;i++){ printf("%.2lf ",zh[i]); } printf("%.2lf",zh[[[latitude]]-1]); return 0; }


--------------------------------------------- Result 23 ---------------------------------------------
[Succeeded / Failed / Skipped / Total] 0 / 23 / 0 / 23:   0%|          | 23/11998 [00:58<8:25:21,  2.53s/it][Succeeded / Failed / Skipped / Total] 0 / 23 / 0 / 23:   0%|          | 24/11998 [00:59<8:12:01,  2.47s/it][Succeeded / Failed / Skipped / Total] 0 / 24 / 0 / 24:   0%|          | 24/11998 [00:59<8:12:01,  2.47s/it][Succeeded / Failed / Skipped / Total] 0 / 24 / 0 / 24:   0%|          | 25/11998 [01:03<8:30:40,  2.56s/it][[0 (-10228%)]] --> [[[FAILED]]]

[[[[Code]]]]: int Xuefen(int xuefen[], int n){ int sumxuefen=0; for(int i=0;i<n;i++){ sumxuefen=sumxuefen+xuefen[i]; } return sumxuefen; } double Jidian(int defen[], int xuefen[], int n){ double sumjidian=0; double jidian[1000]; for(int i=0;i<n;i++){ if(defen[i]>=90&&defen[i]<=100){ jidian[i]=4.0*xuefen[i]; } if(defen[i]>=85&&defen[i]<=89){ jidian[i]=3.7*xuefen[i]; } if(defen[i]>=82&&defen[i]<=84){ jidian[i]=3.3*xuefen[i]; } if(defen[i]>=78&&defen[i]<=81){ jidian[i]=3.0*xuefen[i]; } if(defen[i]>=75&&defen[i]<=77){ jidian[i]=2.7*xuefen[i]; } if(defen[i]>=72&&defen[i]<=74){ jidian[i]=2.3*xuefen[i]; } if(defen[i]>=68&&defen[i]<=71){ jidian[i]=2.0*xuefen[i]; } if(defen[i]>=64&&defen[i]<=67){ jidian[i]=1.5*xuefen[i]; } if(defen[i]>=60&&defen[i]<=63){ jidian[i]=1.0*xuefen[i]; } if(defen[i]<=60){ jidian[i]=1.0*0*xuefen[i]; } } for(int i=0;i<n;i++){ sumjidian+=jidian[i]; } return sumjidian; } int main(){ int n; double p,q; double GPA; scanf("%d",&n); int xuefen[100]; int defen[101]; for(int i=0;i<n;i++){ scanf("%d",&xuefen[i]); } for(int i=0;i<n;i++){ scanf("%d",&defen[i]); } p=Jidian(defen,xuefen,n); q=1.0*Xuefen(xuefen,n); printf("%.2lf",p/q); return 0; }
[[[[Adv]]]]: int Xuefen(int xuefen[], int n){ int [[sumxuefen]]=0; for(int [[i]]=0;[[i]]<n;[[i]]++){ [[sumxuefen]]=[[sumxuefen]]+[[xuefen]][[[i]]]; } return [[sumxuefen]]; } double Jidian(int defen[], int xuefen[], int n){ double sumjidian=0; double [[jidian]][1000]; for(int [[i]]=0;[[i]]<n;[[i]]++){ if([[defen]][[[i]]]>=90&&[[defen]][[[i]]]<=100){ [[jidian]][[[i]]]=4.0*[[xuefen]][[[i]]]; } if([[defen]][[[i]]]>=85&&[[defen]][[[i]]]<=89){ [[jidian]][[[i]]]=3.7*[[xuefen]][[[i]]]; } if([[defen]][[[i]]]>=82&&[[defen]][[[i]]]<=84){ [[jidian]][[[i]]]=3.3*[[xuefen]][[[i]]]; } if([[defen]][[[i]]]>=78&&[[defen]][[[i]]]<=81){ [[jidian]][[[i]]]=3.0*[[xuefen]][[[i]]]; } if([[defen]][[[i]]]>=75&&[[defen]][[[i]]]<=77){ [[jidian]][[[i]]]=2.7*[[xuefen]][[[i]]]; } if([[defen]][[[i]]]>=72&&[[defen]][[[i]]]<=74){ [[jidian]][[[i]]]=2.3*[[xuefen]][[[i]]]; } if([[defen]][[[i]]]>=68&&[[defen]][[[i]]]<=71){ [[jidian]][[[i]]]=2.0*[[xuefen]][[[i]]]; } if([[defen]][[[i]]]>=64&&[[defen]][[[i]]]<=67){ [[jidian]][[[i]]]=1.5*[[xuefen]][[[i]]]; } if([[defen]][[[i]]]>=60&&[[defen]][[[i]]]<=63){ [[jidian]][[[i]]]=1.0*[[xuefen]][[[i]]]; } if([[defen]][[[i]]]<=60){ [[jidian]][[[i]]]=1.0*0*[[xuefen]][[[i]]]; } } for(int [[i]]=0;[[i]]<n;[[i]]++){ sumjidian+=[[jidian]][[[i]]]; } return sumjidian; } int main(){ int n; double p,q; double GPA; scanf("%d",&n); int [[xuefen]][100]; int [[defen]][101]; for(int [[i]]=0;[[i]]<n;[[i]]++){ scanf("%d",&[[xuefen]][[[i]]]); } for(int [[i]]=0;[[i]]<n;[[i]]++){ scanf("%d",&[[defen]][[[i]]]); } p=Jidian([[defen]],[[xuefen]],n); q=1.0*Xuefen([[xuefen]],n); printf("%.2lf",p/q); return 0; }

[[[[Code]]]]: int Xuefen(int xuefen[], int n){ int sumxuefen=0; for(int i=0;i<n;i++){ sumxuefen=sumxuefen+xuefen[i]; } return sumxuefen; } double Jidian(int defen[], int xuefen[], int n){ double sumjidian=0; double jidian[1000]; for(int i=0;i<n;i++){ if(defen[i]>=90&&defen[i]<=100){ jidian[i]=4.0*xuefen[i]; } if(defen[i]>=85&&defen[i]<=89){ jidian[i]=3.7*xuefen[i]; } if(defen[i]>=82&&defen[i]<=84){ jidian[i]=3.3*xuefen[i]; } if(defen[i]>=78&&defen[i]<=81){ jidian[i]=3.0*xuefen[i]; } if(defen[i]>=75&&defen[i]<=77){ jidian[i]=2.7*xuefen[i]; } if(defen[i]>=72&&defen[i]<=74){ jidian[i]=2.3*xuefen[i]; } if(defen[i]>=68&&defen[i]<=71){ jidian[i]=2.0*xuefen[i]; } if(defen[i]>=64&&defen[i]<=67){ jidian[i]=1.5*xuefen[i]; } if(defen[i]>=60&&defen[i]<=63){ jidian[i]=1.0*xuefen[i]; } if(defen[i]<=60){ jidian[i]=1.0*0*xuefen[i]; } } for(int i=0;i<n;i++){ sumjidian+=jidian[i]; } return sumjidian; } int main(){ int n; double p,q; double GPA; scanf("%d",&n); int xuefen[100]; int defen[101]; for(int i=0;i<n;i++){ scanf("%d",&xuefen[i]); } for(int i=0;i<n;i++){ scanf("%d",&defen[i]); } p=Jidian(defen,xuefen,n); q=1.0*Xuefen(xuefen,n); printf("%.2lf",p/q); return 0; }
[[[[Adv]]]]: int Xuefen(int xuefen[], int n){ int [[billionaires]]=0; for(int [[wantto]]=0;[[wantto]]<n;[[wantto]]++){ [[billionaires]]=[[billionaires]]+[[minutes]][[[wantto]]]; } return [[billionaires]]; } double Jidian(int defen[], int xuefen[], int n){ double sumjidian=0; double [[survives]][1000]; for(int [[wantto]]=0;[[wantto]]<n;[[wantto]]++){ if([[ud]][[[wantto]]]>=90&&[[ud]][[[wantto]]]<=100){ [[survives]][[[wantto]]]=4.0*[[minutes]][[[wantto]]]; } if([[ud]][[[wantto]]]>=85&&[[ud]][[[wantto]]]<=89){ [[survives]][[[wantto]]]=3.7*[[minutes]][[[wantto]]]; } if([[ud]][[[wantto]]]>=82&&[[ud]][[[wantto]]]<=84){ [[survives]][[[wantto]]]=3.3*[[minutes]][[[wantto]]]; } if([[ud]][[[wantto]]]>=78&&[[ud]][[[wantto]]]<=81){ [[survives]][[[wantto]]]=3.0*[[minutes]][[[wantto]]]; } if([[ud]][[[wantto]]]>=75&&[[ud]][[[wantto]]]<=77){ [[survives]][[[wantto]]]=2.7*[[minutes]][[[wantto]]]; } if([[ud]][[[wantto]]]>=72&&[[ud]][[[wantto]]]<=74){ [[survives]][[[wantto]]]=2.3*[[minutes]][[[wantto]]]; } if([[ud]][[[wantto]]]>=68&&[[ud]][[[wantto]]]<=71){ [[survives]][[[wantto]]]=2.0*[[minutes]][[[wantto]]]; } if([[ud]][[[wantto]]]>=64&&[[ud]][[[wantto]]]<=67){ [[survives]][[[wantto]]]=1.5*[[minutes]][[[wantto]]]; } if([[ud]][[[wantto]]]>=60&&[[ud]][[[wantto]]]<=63){ [[survives]][[[wantto]]]=1.0*[[minutes]][[[wantto]]]; } if([[ud]][[[wantto]]]<=60){ [[survives]][[[wantto]]]=1.0*0*[[minutes]][[[wantto]]]; } } for(int [[wantto]]=0;[[wantto]]<n;[[wantto]]++){ sumjidian+=[[survives]][[[wantto]]]; } return sumjidian; } int main(){ int n; double p,q; double GPA; scanf("%d",&n); int [[minutes]][100]; int [[ud]][101]; for(int [[wantto]]=0;[[wantto]]<n;[[wantto]]++){ scanf("%d",&[[minutes]][[[wantto]]]); } for(int [[wantto]]=0;[[wantto]]<n;[[wantto]]++){ scanf("%d",&[[ud]][[[wantto]]]); } p=Jidian([[ud]],[[minutes]],n); q=1.0*Xuefen([[minutes]],n); printf("%.2lf",p/q); return 0; }


--------------------------------------------- Result 24 ---------------------------------------------
[[0 (-9781%)]] --> [[[FAILED]]]

[[[[Code]]]]: int main() { int n,a[60][60],b[60],i,j,c[60],d[600],e[600]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&b[i]); c[i]=0; e[i]=0; for(j=0;j<b[i];j++) { scanf("%d",&a[i][j]); if(a[i][j]+3*j<58)c[i]++; if(a[i][j]+3*j<61&&a[i][j]+3*j>57)e[i]=60-a[i][j]-3*j; } d[i]=60-3*c[i]-e[i]; } for(i=0;i<n;i++) { printf("%d\n",d[i]); } return 0; }
[[[[Adv]]]]: int main() { int [[n]],a[60][60],b[60],i,j,c[60],d[600],e[600]; scanf("%d",&[[n]]); for(i=0;i<[[n]];i++) { scanf("%d",&b[i]); c[i]=0; e[i]=0; for(j=0;j<b[i];j++) { scanf("%d",&a[i][j]); if(a[i][j]+3*j<58)c[i]++; if(a[i][j]+3*j<61&&a[i][j]+3*j>57)e[i]=60-a[i][j]-3*j; } d[i]=60-3*c[i]-e[i]; } for(i=0;i<[[n]];i++) { printf("%d\n",d[i]); } return 0; }

[[[[Code]]]]: int main() { int n,a[60][60],b[60],i,j,c[60],d[600],e[600]; scanf("%d",&n); for(i=0;i<n;i++) { scanf("%d",&b[i]); c[i]=0; e[i]=0; for(j=0;j<b[i];j++) { scanf("%d",&a[i][j]); if(a[i][j]+3*j<58)c[i]++; if(a[i][j]+3*j<61&&a[i][j]+3*j>57)e[i]=60-a[i][j]-3*j; } d[i]=60-3*c[i]-e[i]; } for(i=0;i<n;i++) { printf("%d\n",d[i]); } return 0; }
[[[[Adv]]]]: int main() { int [[sodium]],a[60][60],b[60],i,j,c[60],d[600],e[600]; scanf("%d",&[[sodium]]); for(i=0;i<[[sodium]];i++) { scanf("%d",&b[i]); c[i]=0; e[i]=0; for(j=0;j<b[i];j++) { scanf("%d",&a[i][j]); if(a[i][j]+3*j<58)c[i]++; if(a[i][j]+3*j<61&&a[i][j]+3*j>57)e[i]=60-a[i][j]-3*j; } d[i]=60-3*c[i]-e[i]; } for(i=0;i<[[sodium]];i++) { printf("%d\n",d[i]); } return 0; }


--------------------------------------------- Result 25 ---------------------------------------------
[Succeeded / Failed / Skipped / Total] 0 / 25 / 0 / 25:   0%|          | 25/11998 [01:03<8:30:41,  2.56s/it][Succeeded / Failed / Skipped / Total] 0 / 25 / 0 / 25:   0%|          | 26/11998 [01:04<8:17:58,  2.50s/it][Succeeded / Failed / Skipped / Total] 0 / 26 / 0 / 26:   0%|          | 26/11998 [01:04<8:17:58,  2.50s/it][Succeeded / Failed / Skipped / Total] 0 / 26 / 0 / 26:   0%|          | 27/11998 [01:09<8:30:59,  2.56s/it][Succeeded / Failed / Skipped / Total] 0 / 27 / 0 / 27:   0%|          | 27/11998 [01:09<8:30:59,  2.56s/it][Succeeded / Failed / Skipped / Total] 0 / 27 / 0 / 27:   0%|          | 28/11998 [01:12<8:34:07,  2.58s/it][[0 (-10119%)]] --> [[[FAILED]]]

[[[[Code]]]]: int main() { char str[300]; char letter[300]="abcdefghijklmnopqrstuvwxyz"; int num[300]; int total=0; int i,j; for(i=0;i<26;i++){ num[i]=0; } int len; scanf("%s",str); len=strlen(str); for(i=0;i<len;i++){ for(j=0;j<26;j++){ if(str[i]==letter[j]) num[j]++; } } for(i=0;i<26;i++){ if(num[i]>0) printf("%c=%d\n",letter[i],num[i]); } for(i=0;i<26;i++){ total+=num[i]; } if(total==0) printf("No\n"); return 0; }
[[[[Adv]]]]: int main() { char [[str]][300]; char [[letter]][300]="abcdefghijklmnopqrstuvwxyz"; int [[num]][300]; int [[total]]=0; int [[i]],j; for([[i]]=0;[[i]]<26;[[i]]++){ [[num]][[[i]]]=0; } int len; scanf("%s",[[str]]); len=strlen([[str]]); for([[i]]=0;[[i]]<len;[[i]]++){ for(j=0;j<26;j++){ if([[str]][[[i]]]==[[letter]][j]) [[num]][j]++; } } for([[i]]=0;[[i]]<26;[[i]]++){ if([[num]][[[i]]]>0) printf("%c=%d\n",[[letter]][[[i]]],[[num]][[[i]]]); } for([[i]]=0;[[i]]<26;[[i]]++){ [[total]]+=[[num]][[[i]]]; } if([[total]]==0) printf("No\n"); return 0; }

[[[[Code]]]]: int main() { char str[300]; char letter[300]="abcdefghijklmnopqrstuvwxyz"; int num[300]; int total=0; int i,j; for(i=0;i<26;i++){ num[i]=0; } int len; scanf("%s",str); len=strlen(str); for(i=0;i<len;i++){ for(j=0;j<26;j++){ if(str[i]==letter[j]) num[j]++; } } for(i=0;i<26;i++){ if(num[i]>0) printf("%c=%d\n",letter[i],num[i]); } for(i=0;i<26;i++){ total+=num[i]; } if(total==0) printf("No\n"); return 0; }
[[[[Adv]]]]: int main() { char [[maxed]][300]; char [[signage]][300]="abcdefghijklmnopqrstuvwxyz"; int [[número]][300]; int [[fullest]]=0; int [[siento]],j; for([[siento]]=0;[[siento]]<26;[[siento]]++){ [[número]][[[siento]]]=0; } int len; scanf("%s",[[maxed]]); len=strlen([[maxed]]); for([[siento]]=0;[[siento]]<len;[[siento]]++){ for(j=0;j<26;j++){ if([[maxed]][[[siento]]]==[[signage]][j]) [[número]][j]++; } } for([[siento]]=0;[[siento]]<26;[[siento]]++){ if([[número]][[[siento]]]>0) printf("%c=%d\n",[[signage]][[[siento]]],[[número]][[[siento]]]); } for([[siento]]=0;[[siento]]<26;[[siento]]++){ [[fullest]]+=[[número]][[[siento]]]; } if([[fullest]]==0) printf("No\n"); return 0; }


--------------------------------------------- Result 26 ---------------------------------------------
[[0 (-9481%)]] --> [[[FAILED]]]

[[[[Code]]]]: int main() { int n,i,j,k=0,P[10000]={0}; scanf ("%d",&n); /*int*P=(int*)malloc(n*sizeof(int)); for(i=0;i<n;i++) { P[i]=0; }*/ for (;;) { scanf ("%d%d",&i,&j); if (i==0&&j==0) break; P[j]++; if (P[j]==(n-1)) { printf("%d",j);k=1;break;} } if(k==0) printf("NOT FOUND") ; }
[[[[Adv]]]]: int main() { int [[n]],i,j,k=0,P[10000]={0}; scanf ("%d",&[[n]]); for (;;) { scanf ("%d%d",&i,&j); if (i==0&&j==0) break; P[j]++; if (P[j]==([[n]]-1)) { printf("%d",j);k=1;break;} } if(k==0) printf("NOT FOUND") ; }

[[[[Code]]]]: int main() { int n,i,j,k=0,P[10000]={0}; scanf ("%d",&n); /*int*P=(int*)malloc(n*sizeof(int)); for(i=0;i<n;i++) { P[i]=0; }*/ for (;;) { scanf ("%d%d",&i,&j); if (i==0&&j==0) break; P[j]++; if (P[j]==(n-1)) { printf("%d",j);k=1;break;} } if(k==0) printf("NOT FOUND") ; }
[[[[Adv]]]]: int main() { int [[latitude]],i,j,k=0,P[10000]={0}; scanf ("%d",&[[latitude]]); for (;;) { scanf ("%d%d",&i,&j); if (i==0&&j==0) break; P[j]++; if (P[j]==([[latitude]]-1)) { printf("%d",j);k=1;break;} } if(k==0) printf("NOT FOUND") ; }


--------------------------------------------- Result 27 ---------------------------------------------
[[0 (-10923%)]] --> [[[FAILED]]]

[[[[Code]]]]: void Sort(int *sz, int n) { int e, k, i; for(k=1;k<n;k++) { for(i=0;i<n-k;i++) { if(sz[i]<sz[i+1]) { e=sz[i+1]; sz[i+1]=sz[i]; sz[i]=e; } } } } int main() { int i, j, t, k, m, n, sum, king[1000], tian[1000]; scanf("%d", &n); while(n!=0) { for(i=0;i<n;i++) { scanf("%d", (tian+i)); } for(i=0;i<n;i++) { scanf("%d", (king+i)); } Sort(tian,n); Sort(king,n); sum=0; t=0; k=0; for(m=0;m<n;m++) { if(*(tian+t)>*(king+k)) { sum+=200; t++; k++; }else if(*(tian+t)<*(king+k)){ sum-=200; k++; }else{ for(j=k-t+1;j<n-t+1;j++) { if(*(tian+n-j)<=*(king+n+k-t-j)&&*(tian+n-j)<*(king+k)) { sum-=200; t--; break; } } t++; k++; } } printf("%d\n", sum); scanf("%d", &n); } return 0; }
[[[[Adv]]]]: void Sort(int *[[sz]], int [[n]]) { int [[e]], k, [[i]]; for(k=1;k<[[n]];k++) { for([[i]]=0;[[i]]<[[n]]-k;[[i]]++) { if([[sz]][[[i]]]<[[sz]][[[i]]+1]) { [[e]]=[[sz]][[[i]]+1]; [[sz]][[[i]]+1]=[[sz]][[[i]]]; [[sz]][[[i]]]=[[e]]; } } } } int main() { int [[i]], j, t, k, m, [[n]], sum, king[1000], tian[1000]; scanf("%d", &[[n]]); while([[n]]!=0) { for([[i]]=0;[[i]]<[[n]];[[i]]++) { scanf("%d", (tian+[[i]])); } for([[i]]=0;[[i]]<[[n]];[[i]]++) { scanf("%d", (king+[[i]])); } Sort(tian,[[n]]); Sort(king,[[n]]); sum=0; t=0; k=0; for(m=0;m<[[n]];m++) { if(*(tian+t)>*(king+k)) { sum+=200; t++; k++; }else if(*(tian+t)<*(king+k)){ sum-=200; k++; }else{ for(j=k-t+1;j<[[n]]-t+1;j++) { if(*(tian+[[n]]-j)<=*(king+[[n]]+k-t-j)&&*(tian+[[n]]-j)<*(king+k)) { sum-=200; t--; break; } } t++; k++; } } printf("%d\n", sum); scanf("%d", &[[n]]); } return 0; }

[[[[Code]]]]: void Sort(int *sz, int n) { int e, k, i; for(k=1;k<n;k++) { for(i=0;i<n-k;i++) { if(sz[i]<sz[i+1]) { e=sz[i+1]; sz[i+1]=sz[i]; sz[i]=e; } } } } int main() { int i, j, t, k, m, n, sum, king[1000], tian[1000]; scanf("%d", &n); while(n!=0) { for(i=0;i<n;i++) { scanf("%d", (tian+i)); } for(i=0;i<n;i++) { scanf("%d", (king+i)); } Sort(tian,n); Sort(king,n); sum=0; t=0; k=0; for(m=0;m<n;m++) { if(*(tian+t)>*(king+k)) { sum+=200; t++; k++; }else if(*(tian+t)<*(king+k)){ sum-=200; k++; }else{ for(j=k-t+1;j<n-t+1;j++) { if(*(tian+n-j)<=*(king+n+k-t-j)&&*(tian+n-j)<*(king+k)) { sum-=200; t--; break; } } t++; k++; } } printf("%d\n", sum); scanf("%d", &n); } return 0; }
[[[[Adv]]]]: void Sort(int *[[lucien]], int [[nos]]) { int [[gerald]], k, [[you]]; for(k=1;k<[[nos]];k++) { for([[you]]=0;[[you]]<[[nos]]-k;[[you]]++) { if([[lucien]][[[you]]]<[[lucien]][[[you]]+1]) { [[gerald]]=[[lucien]][[[you]]+1]; [[lucien]][[[you]]+1]=[[lucien]][[[you]]]; [[lucien]][[[you]]]=[[gerald]]; } } } } int main() { int [[you]], j, t, k, m, [[nos]], sum, king[1000], tian[1000]; scanf("%d", &[[nos]]); while([[nos]]!=0) { for([[you]]=0;[[you]]<[[nos]];[[you]]++) { scanf("%d", (tian+[[you]])); } for([[you]]=0;[[you]]<[[nos]];[[you]]++) { scanf("%d", (king+[[you]])); } Sort(tian,[[nos]]); Sort(king,[[nos]]); sum=0; t=0; k=0; for(m=0;m<[[nos]];m++) { if(*(tian+t)>*(king+k)) { sum+=200; t++; k++; }else if(*(tian+t)<*(king+k)){ sum-=200; k++; }else{ for(j=k-t+1;j<[[nos]]-t+1;j++) { if(*(tian+[[nos]]-j)<=*(king+[[nos]]+k-t-j)&&*(tian+[[nos]]-j)<*(king+k)) { sum-=200; t--; break; } } t++; k++; } } printf("%d\n", sum); scanf("%d", &[[nos]]); } return 0; }


--------------------------------------------- Result 28 ---------------------------------------------
[Succeeded / Failed / Skipped / Total] 0 / 28 / 0 / 28:   0%|          | 28/11998 [01:12<8:34:07,  2.58s/it][Succeeded / Failed / Skipped / Total] 0 / 28 / 0 / 28:   0%|          | 29/11998 [01:15<8:36:37,  2.59s/it][Succeeded / Failed / Skipped / Total] 0 / 29 / 0 / 29:   0%|          | 29/11998 [01:15<8:36:37,  2.59s/it][Succeeded / Failed / Skipped / Total] 0 / 29 / 0 / 29:   0%|          | 30/11998 [01:20<8:51:54,  2.67s/it][Succeeded / Failed / Skipped / Total] 0 / 30 / 0 / 30:   0%|          | 30/11998 [01:20<8:51:55,  2.67s/it][Succeeded / Failed / Skipped / Total] 0 / 30 / 0 / 30:   0%|          | 31/11998 [01:21<8:46:20,  2.64s/it][Succeeded / Failed / Skipped / Total] 0 / 31 / 0 / 31:   0%|          | 31/11998 [01:21<8:46:20,  2.64s/it][Succeeded / Failed / Skipped / Total] 0 / 31 / 0 / 31:   0%|          | 32/11998 [01:25<8:52:39,  2.67s/it][[0 (-10403%)]] --> [[[FAILED]]]

[[[[Code]]]]: int main(){ int n,i,j,k,p; double sg,ns[50],nv[50],e; char xb[10]; scanf("%d",&n); j=0; k=0; for(i=0;i<n;i++){ scanf("%s%lf",xb,&sg); if(xb[0]=='m'){ ns[j]=sg; j++; } else{ nv[k]=sg; k++; } } for(i=0;i<j;i++){ for(p=0;p<j-1;p++){ if(ns[p]>ns[p+1]){ e=ns[p]; ns[p]=ns[p+1]; ns[p+1]=e; } } } for(i=0;i<k;i++){ for(p=0;p<k-1;p++){ if(nv[p]<nv[p+1]){ e=nv[p]; nv[p]=nv[p+1]; nv[p+1]=e; } } } printf("%.2lf",ns[0]); for(i=1;i<j;i++){ printf(" %.2lf",ns[i]); } for(i=0;i<k;i++){ printf(" %.2lf",nv[i]); } return 0; }
[[[[Adv]]]]: int main(){ int [[n]],i,j,k,p; double [[sg]],ns[50],nv[50],e; char [[xb]][10]; scanf("%d",&[[n]]); j=0; k=0; for(i=0;i<[[n]];i++){ scanf("%s%lf",[[xb]],&[[sg]]); if([[xb]][0]=='m'){ ns[j]=[[sg]]; j++; } else{ nv[k]=[[sg]]; k++; } } for(i=0;i<j;i++){ for(p=0;p<j-1;p++){ if(ns[p]>ns[p+1]){ e=ns[p]; ns[p]=ns[p+1]; ns[p+1]=e; } } } for(i=0;i<k;i++){ for(p=0;p<k-1;p++){ if(nv[p]<nv[p+1]){ e=nv[p]; nv[p]=nv[p+1]; nv[p+1]=e; } } } printf("%.2lf",ns[0]); for(i=1;i<j;i++){ printf(" %.2lf",ns[i]); } for(i=0;i<k;i++){ printf(" %.2lf",nv[i]); } return 0; }

[[[[Code]]]]: int main(){ int n,i,j,k,p; double sg,ns[50],nv[50],e; char xb[10]; scanf("%d",&n); j=0; k=0; for(i=0;i<n;i++){ scanf("%s%lf",xb,&sg); if(xb[0]=='m'){ ns[j]=sg; j++; } else{ nv[k]=sg; k++; } } for(i=0;i<j;i++){ for(p=0;p<j-1;p++){ if(ns[p]>ns[p+1]){ e=ns[p]; ns[p]=ns[p+1]; ns[p+1]=e; } } } for(i=0;i<k;i++){ for(p=0;p<k-1;p++){ if(nv[p]<nv[p+1]){ e=nv[p]; nv[p]=nv[p+1]; nv[p+1]=e; } } } printf("%.2lf",ns[0]); for(i=1;i<j;i++){ printf(" %.2lf",ns[i]); } for(i=0;i<k;i++){ printf(" %.2lf",nv[i]); } return 0; }
[[[[Adv]]]]: int main(){ int [[y]],i,j,k,p; double [[m]],ns[50],nv[50],e; char [[reflects]][10]; scanf("%d",&[[y]]); j=0; k=0; for(i=0;i<[[y]];i++){ scanf("%s%lf",[[reflects]],&[[m]]); if([[reflects]][0]=='m'){ ns[j]=[[m]]; j++; } else{ nv[k]=[[m]]; k++; } } for(i=0;i<j;i++){ for(p=0;p<j-1;p++){ if(ns[p]>ns[p+1]){ e=ns[p]; ns[p]=ns[p+1]; ns[p+1]=e; } } } for(i=0;i<k;i++){ for(p=0;p<k-1;p++){ if(nv[p]<nv[p+1]){ e=nv[p]; nv[p]=nv[p+1]; nv[p+1]=e; } } } printf("%.2lf",ns[0]); for(i=1;i<j;i++){ printf(" %.2lf",ns[i]); } for(i=0;i<k;i++){ printf(" %.2lf",nv[i]); } return 0; }


--------------------------------------------- Result 29 ---------------------------------------------
[[0 (-10279%)]] --> [[[FAILED]]]

[[[[Code]]]]: char s1[100],s2[100]; void strlwr() { int i,len1,len2; len1=strlen(s1); len2=strlen(s2); for (i=0;i<len1;i++) { if (s1[i]>='A' && s1[i]<='Z') { s1[i]=s1[i]-('A'-'a'); } } for (i=0;i<len2;i++) { if (s2[i]>='A' && s2[i]<='Z') { s2[i]=s2[i]-('A'-'a'); } } } int main() { int re; gets(s1); gets(s2); strlwr(); re=strcmp(s1,s2); if (re==0) cout<<"="; if (re>0) cout<<">"; if (re<0) cout<<"<"; return 0; }
[[[[Adv]]]]: char [[s1]][100],s2[100]; void strlwr() { int [[i]],len1,len2; len1=strlen([[s1]]); len2=strlen(s2); for ([[i]]=0;[[i]]<len1;[[i]]++) { if ([[s1]][[[i]]]>='A' && [[s1]][[[i]]]<='Z') { [[s1]][[[i]]]=[[s1]][[[i]]]-('A'-'a'); } } for ([[i]]=0;[[i]]<len2;[[i]]++) { if (s2[[[i]]]>='A' && s2[[[i]]]<='Z') { s2[[[i]]]=s2[[[i]]]-('A'-'a'); } } } int main() { int [[re]]; gets([[s1]]); gets(s2); strlwr(); [[re]]=strcmp([[s1]],s2); if ([[re]]==0) cout<<"="; if ([[re]]>0) cout<<">"; if ([[re]]<0) cout<<"<"; return 0; }

[[[[Code]]]]: char s1[100],s2[100]; void strlwr() { int i,len1,len2; len1=strlen(s1); len2=strlen(s2); for (i=0;i<len1;i++) { if (s1[i]>='A' && s1[i]<='Z') { s1[i]=s1[i]-('A'-'a'); } } for (i=0;i<len2;i++) { if (s2[i]>='A' && s2[i]<='Z') { s2[i]=s2[i]-('A'-'a'); } } } int main() { int re; gets(s1); gets(s2); strlwr(); re=strcmp(s1,s2); if (re==0) cout<<"="; if (re>0) cout<<">"; if (re<0) cout<<"<"; return 0; }
[[[[Adv]]]]: char [[worms]][100],s2[100]; void strlwr() { int [[du]],len1,len2; len1=strlen([[worms]]); len2=strlen(s2); for ([[du]]=0;[[du]]<len1;[[du]]++) { if ([[worms]][[[du]]]>='A' && [[worms]][[[du]]]<='Z') { [[worms]][[[du]]]=[[worms]][[[du]]]-('A'-'a'); } } for ([[du]]=0;[[du]]<len2;[[du]]++) { if (s2[[[du]]]>='A' && s2[[[du]]]<='Z') { s2[[[du]]]=s2[[[du]]]-('A'-'a'); } } } int main() { int [[goal]]; gets([[worms]]); gets(s2); strlwr(); [[goal]]=strcmp([[worms]],s2); if ([[goal]]==0) cout<<"="; if ([[goal]]>0) cout<<">"; if ([[goal]]<0) cout<<"<"; return 0; }


--------------------------------------------- Result 30 ---------------------------------------------
[[0 (-10396%)]] --> [[[FAILED]]]

[[[[Code]]]]: //??? int main( ) { int fa(int x,int y); int x,y; cin>>x>>y; cout<<fa(x,y); return 0; } int fa(int x,int y) { int a[10],b[10]; int i,m,n,p; a[0]=x; b[0]=y; if(x==1||y==1) return 1; for(i=1;i<=10;i++) { a[i]=a[i-1]/2; m=i; if(a[i]==1) break; } for(i=1;i<=10;i++) { b[i]=b[i-1]/2; n=i; if(b[i]==1) break; } if(m>n) p=n; else p=m; for(i=0;i<=p;i++) { if(a[m-i]!=b[n-i]) { break; } } return a[m-i+1]; }
[[[[Adv]]]]: int main( ) { int [[fa]](int x,int [[y]]); int [[x]],[[y]]; cin>>[[x]]>>[[y]]; cout<<[[fa]]([[x]],[[y]]); return 0; } int [[fa]](int x,int [[y]]) { int [[a]][10],b[10]; int [[i]],m,n,p; [[a]][0]=[[x]]; b[0]=[[y]]; if([[x]]==1||[[y]]==1) return 1; for([[i]]=1;[[i]]<=10;[[i]]++) { [[a]][[[i]]]=[[a]][[[i]]-1]/2; m=[[i]]; if([[a]][[[i]]]==1) break; } for([[i]]=1;[[i]]<=10;[[i]]++) { b[[[i]]]=b[[[i]]-1]/2; n=[[i]]; if(b[[[i]]]==1) break; } if(m>n) p=n; else p=m; for([[i]]=0;[[i]]<=p;[[i]]++) { if([[a]][m-[[i]]]!=b[n-[[i]]]) { break; } } return [[a]][m-[[i]]+1]; }

[[[[Code]]]]: //??? int main( ) { int fa(int x,int y); int x,y; cin>>x>>y; cout<<fa(x,y); return 0; } int fa(int x,int y) { int a[10],b[10]; int i,m,n,p; a[0]=x; b[0]=y; if(x==1||y==1) return 1; for(i=1;i<=10;i++) { a[i]=a[i-1]/2; m=i; if(a[i]==1) break; } for(i=1;i<=10;i++) { b[i]=b[i-1]/2; n=i; if(b[i]==1) break; } if(m>n) p=n; else p=m; for(i=0;i<=p;i++) { if(a[m-i]!=b[n-i]) { break; } } return a[m-i+1]; }
[[[[Adv]]]]: int main( ) { int [[acres]](int x,int [[oder]]); int [[n]],[[oder]]; cin>>[[n]]>>[[oder]]; cout<<[[acres]]([[n]],[[oder]]); return 0; } int [[acres]](int x,int [[oder]]) { int [[every]][10],b[10]; int [[lai]],m,n,p; [[every]][0]=[[n]]; b[0]=[[oder]]; if([[n]]==1||[[oder]]==1) return 1; for([[lai]]=1;[[lai]]<=10;[[lai]]++) { [[every]][[[lai]]]=[[every]][[[lai]]-1]/2; m=[[lai]]; if([[every]][[[lai]]]==1) break; } for([[lai]]=1;[[lai]]<=10;[[lai]]++) { b[[[lai]]]=b[[[lai]]-1]/2; n=[[lai]]; if(b[[[lai]]]==1) break; } if(m>n) p=n; else p=m; for([[lai]]=0;[[lai]]<=p;[[lai]]++) { if([[every]][m-[[lai]]]!=b[n-[[lai]]]) { break; } } return [[every]][m-[[lai]]+1]; }


--------------------------------------------- Result 31 ---------------------------------------------
[[0 (-10012%)]] --> [[[FAILED]]]

[[[[Code]]]]: int main() { int n,i,x,t=0; int a[1000]={0}; scanf("%d",&n); for(i=1;i<=n;i++) {scanf("%d",&x); a[x]++; } for(i=1;i<=1000;i++) if(a[i]!=0&&i%2!=0&&t==0){t++;printf("%d",i);} else if(a[i]!=0&&i%2!=0)printf(",%d",i); //getchar(); //getchar(); return 0; }
[[[[Adv]]]]: int main() { int [[n]],i,x,t=0; int [[a]][1000]={0}; scanf("%d",&[[n]]); for(i=1;i<=[[n]];i++) {scanf("%d",&x); [[a]][x]++; } for(i=1;i<=1000;i++) if([[a]][i]!=0&&i%2!=0&&t==0){t++;printf("%d",i);} else if([[a]][i]!=0&&i%2!=0)printf(",%d",i); return 0; }

[[[[Code]]]]: int main() { int n,i,x,t=0; int a[1000]={0}; scanf("%d",&n); for(i=1;i<=n;i++) {scanf("%d",&x); a[x]++; } for(i=1;i<=1000;i++) if(a[i]!=0&&i%2!=0&&t==0){t++;printf("%d",i);} else if(a[i]!=0&&i%2!=0)printf(",%d",i); //getchar(); //getchar(); return 0; }
[[[[Adv]]]]: int main() { int [[y]],i,x,t=0; int [[questo]][1000]={0}; scanf("%d",&[[y]]); for(i=1;i<=[[y]];i++) {scanf("%d",&x); [[questo]][x]++; } for(i=1;i<=1000;i++) if([[questo]][i]!=0&&i%2!=0&&t==0){t++;printf("%d",i);} else if([[questo]][i]!=0&&i%2!=0)printf(",%d",i); return 0; }


--------------------------------------------- Result 32 ---------------------------------------------
[Succeeded / Failed / Skipped / Total] 0 / 32 / 0 / 32:   0%|          | 32/11998 [01:25<8:52:39,  2.67s/it]